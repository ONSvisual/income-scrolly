{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "LayerCake.svelte",
    "Html.svelte",
    "ScaledSvg.svelte",
    "Svg.svelte",
    "App.svelte",
    "AxisX.svelte",
    "AxisY.svelte",
    "BeeswarmChart.svelte",
    "Chessboard.svelte",
    "ColumnChart.svelte",
    "DotLabels.svelte",
    "DotPlot.svelte",
    "DotPlotChart.svelte",
    "Label.svelte",
    "RankChart.svelte",
    "Table.svelte",
    "Voronoi.svelte",
    "Divider.svelte",
    "Filler.svelte",
    "Header.svelte",
    "Media.svelte",
    "ONSFooter.svelte",
    "ONSHeader.svelte",
    "Scroller.svelte",
    "Map.svelte",
    "Arrow.svelte",
    "Em.svelte",
    "Toggle.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { setContext } from 'svelte';\n\timport { writable, derived } from 'svelte/store';\n\n\timport makeAccessor from './utils/makeAccessor.js';\n\timport filterObject from './utils/filterObject.js';\n\timport calcExtents from './lib/calcExtents.js';\n\timport calcDomain from './helpers/calcDomain.js';\n\timport createScale from './helpers/createScale.js';\n\timport createGetter from './helpers/createGetter.js';\n\timport getRange from './helpers/getRange.js';\n\timport defaultScales from './settings/defaultScales.js';\n\timport defaultReverses from './settings/defaultReverses.js';\n\n\texport let ssr = false;\n\texport let pointerEvents = true;\n\texport let position = 'relative';\n\texport let percentRange = false;\n\n\texport let width = undefined;\n\texport let height = undefined;\n\n\texport let containerWidth = width || 100;\n\texport let containerHeight = height || 100;\n\n\texport let element = undefined;\n\n\t/* --------------------------------------------\n\t * Parameters\n\t * Values that computed properties are based on and that\n\t * can be easily extended from config values\n\t *\n\t */\n\texport let x = undefined;\n\texport let y = undefined;\n\texport let z = undefined;\n\texport let r = undefined;\n\texport let custom = {};\n\texport let data = [];\n\texport let xDomain = undefined;\n\texport let yDomain = undefined;\n\texport let zDomain = undefined;\n\texport let rDomain = undefined;\n\texport let xNice = false;\n\texport let yNice = false;\n\texport let zNice = false;\n\texport let rNice = false;\n\texport let xReverse = defaultReverses.x;\n\texport let yReverse = defaultReverses.y;\n\texport let zReverse = defaultReverses.z;\n\texport let rReverse = defaultReverses.r;\n\texport let xPadding = undefined;\n\texport let yPadding = undefined;\n\texport let zPadding = undefined;\n\texport let rPadding = undefined;\n\texport let xScale = defaultScales.x;\n\texport let yScale = defaultScales.y;\n\texport let zScale = defaultScales.y;\n\texport let rScale = defaultScales.r;\n\texport let xRange = undefined;\n\texport let yRange = undefined;\n\texport let zRange = undefined;\n\texport let rRange = undefined;\n\texport let padding = {};\n\texport let extents = {};\n\texport let flatData = undefined;\n\n\t/* --------------------------------------------\n\t * Preserve a copy of our passed in settings before we modify them\n\t * Return this to the user's context so they can reference things if need be\n\t * Add the active keys since those aren't on our settings object.\n\t * This is mostly an escape-hatch\n\t */\n\tconst config = {};\n\t$: if (x) config.x = x;\n\t$: if (y) config.y = y;\n\t$: if (z) config.z = z;\n\t$: if (r) config.r = r;\n\t$: if (xDomain) config.xDomain = xDomain;\n\t$: if (yDomain) config.yDomain = yDomain;\n\t$: if (zDomain) config.zDomain = zDomain;\n\t$: if (rDomain) config.rDomain = rDomain;\n\t$: if (xRange) config.xRange = xRange;\n\t$: if (yRange) config.yRange = yRange;\n\t$: if (zRange) config.zRange = zRange;\n\t$: if (rRange) config.rRange = rRange;\n\n\t/* --------------------------------------------\n\t * Make store versions of each parameter\n\t * Prefix these with `_` to keep things organized\n\t */\n\tconst _percentRange = writable();\n\tconst _containerWidth = writable();\n\tconst _containerHeight = writable();\n\tconst _x = writable();\n\tconst _y = writable();\n\tconst _z = writable();\n\tconst _r = writable();\n\tconst _custom = writable();\n\tconst _data = writable();\n\tconst _xDomain = writable();\n\tconst _yDomain = writable();\n\tconst _zDomain = writable();\n\tconst _rDomain = writable();\n\tconst _xNice = writable();\n\tconst _yNice = writable();\n\tconst _zNice = writable();\n\tconst _rNice = writable();\n\tconst _xReverse = writable();\n\tconst _yReverse = writable();\n\tconst _zReverse = writable();\n\tconst _rReverse = writable();\n\tconst _xPadding = writable();\n\tconst _yPadding = writable();\n\tconst _zPadding = writable();\n\tconst _rPadding = writable();\n\tconst _xScale = writable();\n\tconst _yScale = writable();\n\tconst _zScale = writable();\n\tconst _rScale = writable();\n\tconst _xRange = writable();\n\tconst _yRange = writable();\n\tconst _zRange = writable();\n\tconst _rRange = writable();\n\tconst _padding = writable();\n\tconst _flatData = writable();\n\tconst _extents = writable();\n\tconst _config = writable(config);\n\n\t$: _percentRange.set(percentRange);\n\t$: _containerWidth.set(containerWidth);\n\t$: _containerHeight.set(containerHeight);\n\t$: _x.set(makeAccessor(x));\n\t$: _y.set(makeAccessor(y));\n\t$: _z.set(makeAccessor(z));\n\t$: _r.set(makeAccessor(r));\n\t$: _xDomain.set(xDomain);\n\t$: _yDomain.set(yDomain);\n\t$: _zDomain.set(zDomain);\n\t$: _rDomain.set(rDomain);\n\t$: _custom.set(custom);\n\t$: _data.set(data);\n\t$: _xNice.set(xNice);\n\t$: _yNice.set(yNice);\n\t$: _zNice.set(zNice);\n\t$: _rNice.set(rNice);\n\t$: _xReverse.set(xReverse);\n\t$: _yReverse.set(yReverse);\n\t$: _zReverse.set(zReverse);\n\t$: _rReverse.set(rReverse);\n\t$: _xPadding.set(xPadding);\n\t$: _yPadding.set(yPadding);\n\t$: _zPadding.set(zPadding);\n\t$: _rPadding.set(rPadding);\n\t$: _xScale.set(xScale);\n\t$: _yScale.set(yScale);\n\t$: _zScale.set(zScale);\n\t$: _rScale.set(rScale);\n\t$: _xRange.set(xRange);\n\t$: _yRange.set(yRange);\n\t$: _zRange.set(zRange);\n\t$: _rRange.set(rRange);\n\t$: _padding.set(padding);\n\t$: _extents.set(filterObject(extents));\n\t$: _flatData.set(flatData || data);\n\n\t/* --------------------------------------------\n\t * Create derived values\n\t * Suffix these with `_d`\n\t */\n\tconst activeGetters_d = derived([_x, _y, _z, _r], ([$x, $y, $z, $r]) => {\n\t\treturn [\n\t\t\t{ field: 'x', accessor: $x },\n\t\t\t{ field: 'y', accessor: $y },\n\t\t\t{ field: 'z', accessor: $z },\n\t\t\t{ field: 'r', accessor: $r }\n\t\t].filter(d => d.accessor);\n\t});\n\n\tconst padding_d = derived([_padding, _containerWidth, _containerHeight], ([$padding]) => {\n\t\tconst defaultPadding = { top: 0, right: 0, bottom: 0, left: 0 };\n\t\treturn Object.assign(defaultPadding, $padding);\n\t});\n\n\tconst box_d = derived([_containerWidth, _containerHeight, padding_d], ([$containerWidth, $containerHeight, $padding]) => {\n\t\tconst b = {};\n\t\tb.top = $padding.top;\n\t\tb.right = $containerWidth - $padding.right;\n\t\tb.bottom = $containerHeight - $padding.bottom;\n\t\tb.left = $padding.left;\n\t\tb.width = b.right - b.left;\n\t\tb.height = b.bottom - b.top;\n\t\tif (b.width <= 0) {\n\t\t\tconsole.error('[LayerCake] Target div has zero or negative width. Did you forget to set an explicit width in CSS on the container?');\n\t\t}\n\t\tif (b.height <= 0) {\n\t\t\tconsole.error('[LayerCake] Target div has zero or negative height. Did you forget to set an explicit height in CSS on the container?');\n\t\t}\n\t\treturn b;\n\t});\n\n\tconst width_d = derived([box_d], ([$box]) => {\n\t\treturn $box.width;\n\t});\n\n\tconst height_d = derived([box_d], ([$box]) => {\n\t\treturn $box.height;\n\t});\n\n\t/* --------------------------------------------\n\t * Calculate extents by taking the extent of the data\n\t * and filling that in with anything set by the user\n\t */\n\tconst extents_d = derived([_flatData, activeGetters_d, _extents], ([$flatData, $activeGetters, $extents]) => {\n\t\treturn { ...calcExtents($flatData, $activeGetters.filter(d => !$extents[d.field])), ...$extents };\n\t});\n\n\tconst xDomain_d = derived([extents_d, _xDomain], calcDomain('x'));\n\tconst yDomain_d = derived([extents_d, _yDomain], calcDomain('y'));\n\tconst zDomain_d = derived([extents_d, _zDomain], calcDomain('z'));\n\tconst rDomain_d = derived([extents_d, _rDomain], calcDomain('r'));\n\n\tconst xScale_d = derived([_xScale, extents_d, xDomain_d, _xPadding, _xNice, _xReverse, width_d, height_d, _xRange, _percentRange], createScale('x'));\n\tconst xGet_d = derived([_x, xScale_d], createGetter);\n\n\tconst yScale_d = derived([_yScale, extents_d, yDomain_d, _yPadding, _yNice, _yReverse, width_d, height_d, _yRange, _percentRange], createScale('y'));\n\tconst yGet_d = derived([_y, yScale_d], createGetter);\n\n\tconst zScale_d = derived([_zScale, extents_d, zDomain_d, _zPadding, _zNice, _zReverse, width_d, height_d, _zRange, _percentRange], createScale('z'));\n\tconst zGet_d = derived([_z, zScale_d], createGetter);\n\n\tconst rScale_d = derived([_rScale, extents_d, rDomain_d, _rPadding, _rNice, _rReverse, width_d, height_d, _rRange, _percentRange], createScale('r'));\n\tconst rGet_d = derived([_r, rScale_d], createGetter);\n\n\tconst xRange_d = derived([xScale_d], getRange);\n\tconst yRange_d = derived([yScale_d], getRange);\n\tconst zRange_d = derived([zScale_d], getRange);\n\tconst rRange_d = derived([rScale_d], getRange);\n\n\tconst aspectRatio_d = derived([width_d, height_d], ([$aspectRatio, $width, $height]) => {\n\t\treturn $width / $height;\n\t});\n\n\t$: context = {\n\t\tactiveGetters: activeGetters_d,\n\t\twidth: width_d,\n\t\theight: height_d,\n\t\tpercentRange: _percentRange,\n\t\taspectRatio: aspectRatio_d,\n\t\tcontainerWidth: _containerWidth,\n\t\tcontainerHeight: _containerHeight,\n\t\tx: _x,\n\t\ty: _y,\n\t\tz: _z,\n\t\tr: _r,\n\t\tcustom: _custom,\n\t\tdata: _data,\n\t\txNice: _xNice,\n\t\tyNice: _yNice,\n\t\tzNice: _zNice,\n\t\trNice: _rNice,\n\t\txReverse: _xReverse,\n\t\tyReverse: _yReverse,\n\t\tzReverse: _zReverse,\n\t\trReverse: _rReverse,\n\t\txPadding: _xPadding,\n\t\tyPadding: _yPadding,\n\t\tzPadding: _zPadding,\n\t\trPadding: _rPadding,\n\t\tpadding: padding_d,\n\t\tflatData: _flatData,\n\t\textents: extents_d,\n\t\txDomain: xDomain_d,\n\t\tyDomain: yDomain_d,\n\t\tzDomain: zDomain_d,\n\t\trDomain: rDomain_d,\n\t\txRange: xRange_d,\n\t\tyRange: yRange_d,\n\t\tzRange: zRange_d,\n\t\trRange: rRange_d,\n\t\tconfig: _config,\n\t\txScale: xScale_d,\n\t\txGet: xGet_d,\n\t\tyScale: yScale_d,\n\t\tyGet: yGet_d,\n\t\tzScale: zScale_d,\n\t\tzGet: zGet_d,\n\t\trScale: rScale_d,\n\t\trGet: rGet_d\n\t};\n\n\t$: setContext('LayerCake', context);\n</script>\n\n{#if (ssr === true || typeof window !== 'undefined')}\n\t<div\n\t\tbind:this={element}\n\t\tclass=\"layercake-container\"\n\t\tstyle=\"\n\t\t\tposition:{position};\n\t\t\t{position === 'absolute' ? 'top:0;right:0;bottom:0;left:0;' : ''}\n\t\t\t{pointerEvents === false ? 'pointer-events:none;' : ''}\n\t\t\"\n\t\tbind:clientWidth={containerWidth}\n\t\tbind:clientHeight={containerHeight}\n\t>\n\t\t<slot\n\t\t\t{element}\n\t\t\twidth={$width_d}\n\t\t\theight={$height_d}\n\t\t\taspectRatio={$aspectRatio_d}\n\t\t\tcontainerWidth={$_containerWidth}\n\t\t\tcontainerHeight={$_containerHeight}\n\t\t></slot>\n\t</div>\n{/if}\n\n<style>\n\t.layercake-container,\n\t.layercake-container :global(*) {\n\t\tbox-sizing: border-box;\n\t}\n\t.layercake-container {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let element = undefined;\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { padding } = getContext('LayerCake');\n</script>\n\n<div\n\tbind:this={element}\n\tclass=\"layercake-layout-html\"\n\tstyle=\"top: {$padding.top}px; right:{$padding.right}px; bottom:{$padding.bottom}px; left:{$padding.left}px;{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<slot {element}></slot>\n</div>\n\n<style>\n\tdiv,\n\tslot {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let element = undefined;\n\texport let fixedAspectRatio = 1;\n\texport let viewBox = `0 0 100 ${100 / fixedAspectRatio}`;\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { padding } = getContext('LayerCake');\n</script>\n\n<svg\n\tbind:this={element}\n\t{viewBox}\n\tpreserveAspectRatio=\"none\"\n\tstyle=\"top: {$padding.top}px; right:0px; bottom:0px; left:{$padding.left}px;width:calc(100% - {($padding.left + $padding.right)}px);height:calc(100% - {($padding.top + $padding.bottom)}px);{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<defs>\n\t\t<slot name=\"defs\"></slot>\n\t</defs>\n\n\t<slot {element}></slot>\n</svg>\n\n<style>\n\tsvg {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: visible;\n\t}\n\tsvg :global(*) {\n\t\tvector-effect: non-scaling-stroke;\n\t}\n</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let element = undefined;\n\texport let viewBox = undefined;\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { containerWidth, containerHeight, padding } = getContext('LayerCake');\n</script>\n<svg\n\tbind:this={element}\n\tclass=\"layercake-layout-svg\"\n\t{viewBox}\n\twidth={$containerWidth}\n\theight={$containerHeight}\n\tstyle=\"{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<defs>\n\t\t<slot name=\"defs\"></slot>\n\t</defs>\n\t<g class=\"layercake-layout-svg_g\" transform=\"translate({$padding.left}, {$padding.top})\">\n\t\t<slot {element}></slot>\n\t</g>\n</svg>\n\n<style>\n\tsvg {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\toverflow: visible;\n\t}\n</style>\n",
    "<script>\n\timport { setContext, onMount } from \"svelte\";\n\timport { bbox, union } from '@turf/turf';\n\timport { getData, getTopo, setColors, suffixer } from \"./utils\";\n\timport { themes, dataurl, lsoaBldg, ladBounds, colors, scatterColors, hiColor, fillColor, distributions } from './config';\n\timport ONSHeader from \"./layout/ONSHeader.svelte\";\n\timport ONSFooter from \"./layout/ONSFooter.svelte\";\n\timport Header from \"./layout/Header.svelte\";\n\timport Section from \"./layout/Section.svelte\";\n\timport Media from \"./layout/Media.svelte\";\n\timport Scroller from \"./layout/Scroller.svelte\";\n\timport Filler from \"./layout/Filler.svelte\";\n\timport Divider from \"./layout/Divider.svelte\";\n\timport Map from \"./maps/Map.svelte\";\n\timport MapSource from \"./maps/MapSource.svelte\";\n\timport MapLayer from \"./maps/MapLayer.svelte\";\n\timport BeeswarmChart from './charts/BeeswarmChart.svelte';\n\timport ColumnChart from './charts/ColumnChart.svelte';\n\timport DotPlotChart from './charts/DotPlotChart.svelte';\n\timport RankChart from './charts/RankChart.svelte';\n\timport Chessboard from './charts/Chessboard.svelte';\n\timport Table from './charts/Table.svelte';\n\timport Toggle from './ui/Toggle.svelte';\n\timport Arrow from './ui/Arrow.svelte';\n\timport Em from './ui/Em.svelte';\n\n\t// STYLE CONFIG\n\t// Set theme globally (options are defined in config.js)\n\tlet theme = \"light\";\n\tsetContext(\"theme\", theme);\n\tsetColors(themes, theme);\n\n\t// SCROLLYTELLING CONFIG\n\t// Config\n\tconst threshold = 0.65;\n\t// State\n\tlet index = [];\n\tlet indexPrev = [];\n\n\t// APP STATE\n\tlet data = {\n\t\tlad: null,\n\t\tlsoa: null,\n\t\tindexed: null,\n\t\tgeojson: null\n\t};\n\tlet mediaQuery = window.matchMedia(\"(prefers-reduced-motion: reduce)\"); // Check if browser prefers reduced motion\n\tlet animation = !mediaQuery || mediaQuery.matches ? false : true; // Set animation default on/off based on browser preference\n\tlet legend = 'bars'; // Current legend type for the map\n\tlet selected = null; // Selected area (object)\n\tlet selectedPrev = null; // Previous selected area (to compare for changes)\n\tlet selectedCode = null; // Selected area code\n\tlet highlighted = []; // Array of area codes (to highlight on maps/charts)\n\tlet highlightedData = []; // The data objects for the above codes\n\tlet highlightedTitle = null; // Title for map legend (for relevant legend types)\n\tlet highlightedDist = 'left'; // Selected distribution type\n\tlet filled = []; // Like 'highlighted' array, but for filled areas on map\n\tlet hovered = null; // Area code hovered on map or chart\n\tlet hoveredArea = null; // Data object for hovered area\n\tlet observer = false; // \"true\" when IntersectionObserver for map DIVs are set\n\tlet explorer = false; // \"true\" if map in explorer mode (allowing to select areas by clicking)\n\tlet quintiles = null; // Highlighted quintiles on bar chart (array of active quintiles,  between 1 and 5)\n\tlet filter = \"\"; // Text filter for table at end of article\n\n\tonMount(() => {\n\t\tindexPrev = [...index];\n\t});\n\t\n\t// MAP CODE\n\t// Config\n\tconst mapstyle = './lib/style-ons-light.json';\n\tconst mapbounds = {\n\t\teng: [[-5.816, 49.864], [1.863, 55.872]]\n\t};\n\t// Map-specific state\n\tlet map = null; // Map object (used to call map functions once map is initialised)\n\tlet element = []; // Array for map container DOM elements. The map DIV itself jumps up and down the article to avoid initialising multiple maps\n\n\t// Map-specific functions\n\n\t// Fit map to one or more features, based on their geographic code\n\tfunction fitFeatures(codes, animate = animation) {\n\t\tif (map) {\n\t\t\tif (!Array.isArray(codes)) {\n\t\t\t\tcodes = [codes];\n\t\t\t}\n\t\t\tlet features = data.geojson.features.filter(f => codes.includes(f.properties[ladBounds.code]));\n\t\t\tlet polygon = union(...features);\n\t\t\tlet bounds = bbox(polygon);\n\t\t\tmap.fitBounds(bounds, { padding: 50, animate });\n\t\t}\n\t}\n\n\t// Fit map to specified min/max bounds [[xmin, ymin], [xmax, ymax]]\n\tfunction fitBounds(bounds, animate = animation) {\n\t\tif (map) {\n\t\t\tmap.fitBounds(bounds, { animate });\n\t\t}\n\t}\n\n\t// Actions for MAP scroller\n\t// These arrays of functions correspond to the <section/> tags within each of the map <Scroller/> components\n\tconst mapActions = [\n\t\t[\n\t\t\t() => {\n\t\t\t\thighlighted = [ selected.lad19cd ];\n\t\t\t\tfilled = [];\n\t\t\t\tfitFeatures(highlighted);\n\t\t\t\tlegend = 'bars';\n\t\t\t\texplorer = false;\n\t\t\t\tquintiles = [1];\n\t\t\t},\n\t\t\t() => {\n\t\t\t\thighlighted = [ selected.lad19cd ];\n\t\t\t\tfitFeatures(highlighted);\n\t\t\t\tlegend = 'bars';\n\t\t\t\tquintiles = [5];\n\t\t\t},\n\t\t\t() => {\n\t\t\t\thighlighted = [ selected.lad19cd ];\n\t\t\t\tfitBounds(mapbounds.eng);\n\t\t\t\tlegend = 'bars';\n\t\t\t\tquintiles = null;\n\t\t\t},\n\t\t\t() => {\n\t\t\t\thighlighted = [];\n\t\t\t\tfilled = [];\n\t\t\t\tfitBounds(mapbounds.eng);\n\t\t\t\tlegend = 'bars';\n\t\t\t\tquintiles = null;\n\t\t\t},\n\t\t\t() => {\n\t\t\t\t// Highlight 20 left-skew areas\n\t\t\t\thighlightedTitle = \"More income-deprived\";\n\t\t\t\thighlightedDist = \"left\";\n\t\t\t\thighlightedData = data.lad.filter(d => d.type == \"left\");\n\t\t\t\tfilled = highlightedData.map(d => d.lad19cd);\n\t\t\t\thighlighted = [];\n\t\t\t\tfitBounds(mapbounds.eng);\n\t\t\t\tlegend = 'skew';\n\t\t\t},\n\t\t\t() => {\n\t\t\t\thighlightedTitle = \"More income-deprived\";\n\t\t\t\thighlightedDist = \"left\";\n\t\t\t\thighlightedData = data.lad.filter(d => d.type == \"left\");\n\t\t\t\tfilled = highlightedData.map(d => d.lad19cd);\n\t\t\t\thighlighted = ['E07000145', 'E06000009', 'E07000062'];\n\t\t\t\tfitFeatures(highlighted);\n\t\t\t\tlegend = 'skew';\n\t\t\t},\n\t\t\t() => {\n\t\t\t\t// Highlight 20 highest income areas\n\t\t\t\thighlightedTitle = \"Less income-deprived\";\n\t\t\t\thighlightedDist = \"right\";\n\t\t\t\thighlightedData = data.lad.filter(d => d.type == \"right\");\n\t\t\t\tfilled = highlightedData.map(d => d.lad19cd);\n\t\t\t\thighlighted = [];\n\t\t\t\tfitBounds(mapbounds.eng);\n\t\t\t\tlegend = 'skew';\n\t\t\t},\n\t\t\t() => {\n\t\t\t\thighlightedTitle = \"Less income-deprived\";\n\t\t\t\thighlightedDist = \"right\";\n\t\t\t\thighlightedData = data.lad.filter(d => d.type == \"right\");\n\t\t\t\tfilled = highlightedData.map(d => d.lad19cd);\n\t\t\t\thighlighted = ['E07000089', 'E06000041', 'E07000155'];\n\t\t\t\tfitFeatures(highlighted);\n\t\t\t\tlegend = 'skew';\n\t\t\t},\n\t\t\t() => {\n\t\t\t\thighlightedTitle = \"Less income-deprived\";\n\t\t\t\thighlightedDist = \"right\";\n\t\t\t\thighlightedData = data.lad.filter(d => d.type == \"right\");\n\t\t\t\tfilled = highlightedData.map(d => d.lad19cd);\n\t\t\t\thighlighted = [];\n\t\t\t\tfitBounds(mapbounds.eng);\n\t\t\t\tlegend = 'skew';\n\t\t\t},\n\t\t\t() => {\n\t\t\t\thighlightedTitle = \"'n'-shaped profile\";\n\t\t\t\thighlightedDist = \"nshape\";\n\t\t\t\thighlightedData = data.lad.filter(d => d.type == \"nshape\");\n\t\t\t\tfilled = highlightedData.map(d => d.lad19cd);\n\t\t\t\thighlighted = [];\n\t\t\t\tfitBounds(mapbounds.eng);\n\t\t\t\tlegend = 'skew';\n\t\t\t},\n\t\t\t() => {\n\t\t\t\thighlightedTitle = \"'n'-shaped profile\";\n\t\t\t\thighlightedDist = \"nshape\";\n\t\t\t\thighlightedData = data.lad.filter(d => d.type == \"nshape\");\n\t\t\t\tfilled = highlightedData.map(d => d.lad19cd);\n\t\t\t\thighlighted = [];\n\t\t\t\tfitBounds(mapbounds.eng);\n\t\t\t\tlegend = 'skew';\n\t\t\t},\n\t\t\t() => {\n\t\t\t\t// Highlight 20 flat distributions\n\t\t\t\thighlightedTitle = \"Flat profile\";\n\t\t\t\thighlightedDist = \"flat\";\n\t\t\t\thighlightedData = data.lad.filter(d => d.type == \"flat\");\n\t\t\t\tfilled = highlightedData.map(d => d.lad19cd);\n\t\t\t\thighlighted = [];\n\t\t\t\tfitBounds(mapbounds.eng);\n\t\t\t\tlegend = 'skew';\n\t\t\t},\n\t\t\t() => {\n\t\t\t\thighlightedTitle = \"Flat profile\";\n\t\t\t\thighlightedDist = \"flat\";\n\t\t\t\thighlightedData = data.lad.filter(d => d.type == \"flat\");\n\t\t\t\tfilled = highlightedData.map(d => d.lad19cd);\n\t\t\t\thighlighted = ['E06000023', 'E07000178', 'E07000237', 'E07000154'];\n\t\t\t\tfitFeatures(highlighted);\n\t\t\t\tlegend = 'skew';\n\t\t\t},\n\t\t\t() => {\n\t\t\t\thighlightedTitle = \"Flat profile\";\n\t\t\t\thighlightedDist = \"flat\";\n\t\t\t\thighlightedData = data.lad.filter(d => d.type == \"flat\");\n\t\t\t\tfilled = highlightedData.map(d => d.lad19cd);\n\t\t\t\thighlighted = ['E06000015', 'E08000010'];\n\t\t\t\tfitFeatures(highlighted);\n\t\t\t\tlegend = 'skew';\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\t() => {\n\t\t\t\tfilled = [];\n\t\t\t\thighlighted = [ 'E06000002' ];\n\t\t\t\tfitFeatures(highlighted, false);\n\t\t\t\tlegend = 'hibars';\n\t\t\t\tquintiles = null;\n\t\t\t\texplorer = false;\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tfilled = [];\n\t\t\t\thighlighted = [ 'E09000020' ];\n\t\t\t\tfitFeatures(highlighted);\n\t\t\t\tlegend = 'hibars';\n\t\t\t\texplorer = false;\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tfilled = [];\n\t\t\t\thighlighted = [ 'E07000199' ];\n\t\t\t\tfitFeatures(highlighted);\n\t\t\t\tlegend = 'hibars';\n\t\t\t\texplorer = false;\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tfilled = [];\n\t\t\t\thighlighted = [ 'E07000009' ];\n\t\t\t\tfitFeatures(highlighted);\n\t\t\t\tlegend = 'hibars';\n\t\t\t\texplorer = false;\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tfilled = [];\n\t\t\t\thighlighted = [ 'E06000024' ];\n\t\t\t\tfitFeatures(highlighted);\n\t\t\t\tlegend = 'hibars';\n\t\t\t\texplorer = false;\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tfilled = [];\n\t\t\t\thighlighted = [ 'E08000014' ];\n\t\t\t\tfitFeatures(highlighted);\n\t\t\t\tlegend = 'hibars';\n\t\t\t\texplorer = false;\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tfilled = [];\n\t\t\t\thighlighted = [];\n\t\t\t\tlegend = 'hibars';\n\t\t\t\texplorer = false;\n\t\t\t}\n\t\t],\n\t\t[\n\t\t\t() => {\n\t\t\t\t// Zoom to selected area\n\t\t\t\thighlighted = [selectedCode];\n\t\t\t\thighlightedTitle = null;\n\t\t\t\tfitBounds(mapbounds.eng, false);\n\t\t\t\tlegend = 'bars';\n\t\t\t\tquintiles = null;\n\t\t\t\texplorer = true;\n\t\t\t}\n\t\t]\n\t];\n\t\n\t// Reactive code to trigger MAP actions\n\t// Note: This code is a messy and could definitely be improved!\n\t$: if (map && data.lad && index[0] != indexPrev[0]) {\n\t\tif (mapActions[0][+index[0]]) {\n\t\t\tmapActions[0][+index[0]]();\n\t\t}\n\t\tindexPrev[0] = index[0];\n\t}\n\t$: if (map && data.lad && index[0] >= mapActions[0].length && index[1] != indexPrev[1]) {\n\t\tif (mapActions[1][+index[1]]) {\n\t\t\tmapActions[1][+index[1]]();\n\t\t}\n\t\tindexPrev[1] = index[1];\n\t}\n\t$: if (map && data.lad && index[1] >= mapActions[1].length && index[2] != indexPrev[2]) {\n\t\tif (mapActions[2][+index[2]]) {\n\t\t\tmapActions[2][+index[2]]();\n\t\t}\n\t\tindexPrev[2] = index[2];\n\t}\n\n\t// CHART CODE\n\t// State\n\tlet scatter = {\n\t\txKey: \"income\",\n\t\tyKey: null,\n\t\tzKey: null,\n\t\tselected: null,\n\t\tcolors: scatterColors.quintiles\n\t};\n\n\t// Actions for CHART scroller\n\t// This array of functions correspond to the <section/> tags within the scatter/beeswarm chart <Scroller/> component\n\tconst chartActions = [\n\t\t[\n\t\t\t() => {\n\t\t\t\tscatter.selected = selectedCode;\n\t\t\t\tscatter.yKey = null;\n\t\t\t\tscatter.zKey = null;\n\t\t\t\tscatter.colors = scatterColors.quintiles;\n\t\t\t\thighlighted = [];\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tscatter.selected = selectedCode;\n\t\t\t\tscatter.yKey = \"moran\";\n\t\t\t\tscatter.zKey = null;\n\t\t\t\tscatter.colors = scatterColors.quintiles;\n\t\t\t\thighlighted = [];\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tscatter.selected = selectedCode;\n\t\t\t\tscatter.yKey = \"moran\";\n\t\t\t\tscatter.zKey = null;\n\t\t\t\tscatter.colors = scatterColors.quintiles;\n\t\t\t\thighlighted = [];\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tscatter.selected = null;\n\t\t\t\tscatter.yKey = \"moran\";\n\t\t\t\tscatter.zKey = \"quintile\";\n\t\t\t\tscatter.colors = scatterColors.quintiles;\n\t\t\t\thighlighted = [];\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tscatter.selected = null;\n\t\t\t\tscatter.yKey = \"moran\";\n\t\t\t\tscatter.zKey = \"quintile\";\n\t\t\t\tscatter.colors = scatterColors.quintiles;\n\t\t\t\thighlighted = ['E08000014', 'E08000008'];\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tscatter.selected = null;\n\t\t\t\tscatter.yKey = \"moran\";\n\t\t\t\tscatter.zKey = \"quintile\";\n\t\t\t\tscatter.colors = scatterColors.quintiles;\n\t\t\t\thighlighted = [];\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tscatter.selected = null;\n\t\t\t\tscatter.yKey = \"moran\";\n\t\t\t\tscatter.zKey = \"quintile\";\n\t\t\t\tscatter.colors = scatterColors.quintiles;\n\t\t\t\thighlighted = ['E06000002', 'E08000012', 'E07000127', 'E08000029'];\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tscatter.selected = null;\n\t\t\t\tscatter.yKey = \"moran\";\n\t\t\t\tscatter.zKey = \"ruc\";\n\t\t\t\tscatter.colors = scatterColors.ruc;\n\t\t\t\thighlighted = [];\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tscatter.selected = null;\n\t\t\t\tscatter.yKey = \"moran\";\n\t\t\t\tscatter.zKey = \"ruc\";\n\t\t\t\tscatter.colors = scatterColors.ruc;\n\t\t\t\thighlighted = [];\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tscatter.selected = null;\n\t\t\t\tscatter.yKey = \"moran\";\n\t\t\t\tscatter.zKey = \"ruc\";\n\t\t\t\tscatter.colors = scatterColors.ruc;\n\t\t\t\thighlighted = [];\n\t\t\t}\n\t\t]\n\t];\n\n\t// Reactive code to trigger CHART actions\n\t// Note: This code is a messy and could definitely be improved!\n\t$: if (data.lad && index[3] != indexPrev[3]) {\n\t\tif (chartActions[0][+index[3]]) {\n\t\t\tchartActions[0][+index[3]]();\n\t\t}\n\t\tindexPrev[3] = index[3];\n\t}\n\n\t// INTERSECITON OBSERVER FUNCTION FOR MAP\n\t// There is only a single Mapbox map node in the article.\n\t// It is moved to the visible node using this function as you scroll from section to section.\n\tfunction setObserver() {\n\t\t// Move map element to whichever container is in view\n\t\tconst options = {\n\t\t\tthreshold: [0, 1]\n\t\t};\n\t\tconst obs = new IntersectionObserver((entries) => {\n\t\t\tif (!entries[0].target.querySelector(\"#map\")) {\n\t\t\t\tconsole.log('Moving map to visible node!');\n\t\t\t\tentries[0].target.appendChild(document.querySelector(\"#map\"));\n\t\t\t\tentries[0].target.appendChild(document.querySelector(\"#legend\"));\n\t\t\t\tlet i = element.indexOf(entries[0].target);\n\t\t\t\tif (typeof mapActions[i][+index[i]] === 'function') {\n\t\t\t\t\tmapActions[i][+index[i]]();\n\t\t\t\t}\n\t\t\t}\n\t\t}, options);\n\t\telement.forEach(el => {\n\t\t\tobs.observe(el);\n\t\t});\n\n\t\tobserver = true;\n\t}\n\n\t// URL/ROUTING FUNCTIONS\n\t// These functions make sure that the URL is updated when the selected location changes\n\t// They also ensure that the browser's back and forward buttons work as expected\n\n\t// Update url, adding to browser history\n\tfunction updateURL() {\n\t\tlet hash = location.hash;\n\t\tlet newhash = `#/${selectedCode}`;\n\t\tif (hash != newhash) {\n\t\t\thistory.pushState(undefined, undefined, newhash);\n\t\t}\n\t}\n\n\t// Replace url, without adding to browser history (used on initial load)\n\tfunction replaceURL() {\n\t\tlet hash = `#/${selectedCode}`;\n\t\thistory.replaceState(undefined, undefined, hash);\n\t}\n\n\t// Respond to URL change\n\twindow.onpopstate = () => {\n\t\tlet hash = location.hash == '' ? '' : location.hash.split('/');\n\n\t\tif (hash.length == 2 && hash[0] == '#') {\n\t\t\tif (selectedCode != hash[1]) {\n\t\t\t\tlet found = data.lad.find(d => d.lad19cd == hash[1]);\n\t\t\t\tif (found) {\n\t\t\t\t\tselected = found;\n\t\t\t\t\tselectedCode = selected.lad19cd;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// ON-SELECT FUNCTIONS\n\t// These functions are called when an area is selected via a dropdown, map or chart.\n\t// They only log to the console in this version. In the live version they have attached functions for analtics.\n\n\tfunction dropSelect() {\n\t\tlet name = selected.lad19nm;\n\t\tconsole.log(name + ' selected via dropdown');\n\t}\n\n\tfunction mapSelect(ev) {\n\t\tif (ev.detail.code) {\n\t\t\tlet name = data.lad.find(d => d.lad19cd == ev.detail.code).lad19nm;\n\t\t\tconsole.log(name + ' selected via map');\n\t\t}\n\t}\n\n\tfunction chartSelect(ev) {\n\t\tif (ev.detail.code) {\n\t\t\tlet name = data.lad.find(d => d.lad19cd == ev.detail.code).lad19nm;\n\t\t\tconsole.log(name + ' selected via chart');\n\t\t}\n\t}\n\n\t// LOAD THE DATA & INITIALISE THE APP STATE\n\tgetData(dataurl.lad)\n\t.then(laddata => {\n\t\t// Remove Isles of Scilly from dataset\n\t\tladdata = laddata.filter(d => d.lad19cd != 'E06000053');\n\n\t\tgetData(dataurl.lsoa)\n\t\t.then(lsoadata => {\n\t\t\t// Load neighbourhood (LSOA) level data\n\t\t\t// Assign counts to local authority data \n\t\t\tconst deciles = {d1: 0, d2: 0, d3: 0, d4: 0, d5: 0, d6: 0, d7: 0, d8: 0, d9: 0, d10: 0};\n\t\t\tlet indexed = {};\n\t\t\tlsoadata.forEach(d => {\n\t\t\t\tif (!indexed[d.lad19cd]) {\n\t\t\t\t\tindexed[d.lad19cd] = {deciles: {...deciles}, count: 0, min: d.income_score, max: d.income_score};\n\t\t\t\t}\n\t\t\t\tindexed[d.lad19cd].deciles['d' + d.income_decile] += 1;\n\t\t\t\tindexed[d.lad19cd].count += 1;\n\t\t\t\tif (d.income_score < indexed[d.lad19cd].min) { indexed[d.lad19cd].min = d.income_score };\n\t\t\t\tif (d.income_score > indexed[d.lad19cd].max) { indexed[d.lad19cd].max = d.income_score };\n\n\t\t\t\td.color = colors[d.income_decile - 1];\n\t\t\t});\n\n\t\t\tladdata = laddata.map(d => {\n\t\t\t\treturn {...d, ...indexed[d.lad19cd]};\n\t\t\t});\n\t\t\tladdata.forEach(d => d.range = d.max - d.min);\n\n\t\t\tconst dims = ['income', 'moran', 'range'];\n\t\t\tdims.forEach(dim => {\n\t\t\t\tladdata.sort((a, b) => a[dim] - b[dim]);\n\t\t\t\tladdata.forEach((d, i) => d[dim + '_rank'] = i + 1);\n\t\t\t});\n\n\t\t\tladdata.sort((a, b) => a.lad19nm.localeCompare(b.lad19nm));\n\n\t\t\t// LOAD THE TOPOJSON\n\t\t\tgetTopo(ladBounds.url, ladBounds.layer)\n\t\t\t.then(geojson => {\n\t\t\t\tgeojson.features = geojson.features.filter(f => f.properties[ladBounds.code].substring(0, 1) == 'E').filter(f => f.properties[ladBounds.code] != 'E06000053'); // Filter out Wales and Isles of Scilly\n\n\t\t\t\t// Assign data to app state variables\n\t\t\t\tdata.lad = laddata;\n\t\t\t\tdata.lsoa = lsoadata;\n\t\t\t\tdata.indexed = indexed;\n\t\t\t\tdata.geojson = geojson;\n\n\t\t\t\t// Assign initial selection based on URL\n\t\t\t\tlet hash = location.hash.split('/');\n\t\t\t\tlet found = hash.length == 2 && hash[0] == '#' ? data.lad.find(d => d.lad19cd == hash[1]) : null;\n\t\t\t\tif (found) {\n\t\t\t\t\tselected = selectedPrev = found;\n\t\t\t\t\tselectedCode = selected.lad19cd;\n\t\t\t\t} else {\n\t\t\t\t\tselected = selectedPrev = data.lad[0];\n\t\t\t\t\tselectedCode = selected.lad19cd;\n\t\t\t\t\treplaceURL();\n\t\t\t\t}\n\n\t\t\t\t// Move map DIV to the right place, if needed\n\t\t\t\tif (index[0] >= mapActions[0].length) {\n\t\t\t\t\telement[1].appendChild(document.querySelector(\"#map\"));\n\t\t\t\t\telement[1].appendChild(document.querySelector(\"#legend\"));\n\t\t\t\t}\n\n\t\t\t\t// Run first map scroll action\n\t\t\t\tmapActions[0][0]();\n\t\t\t});\n\t\t})\n\t});\n\n\t// SHARED REACTIVE CODE\n\n\t// Update hoveredArea object to match hovered area code\n\t$: hoveredArea = hovered ? data.lad.find(d => d.lad19cd == hovered) : null;\n\n\t// Set intersection observer to move map once map container DOM elements are initialised\n\t$: !observer && element[2] && setObserver();\n\n\t// Code to run when a new area is selected\n\t// Syncs state variables related to selected area, fits map to selected area, and updates the URL\n\t$: if (selected && selectedPrev && selectedCode) {\n\t\tif (selected != selectedPrev) {\n\t\t\tselectedCode = selected.lad19cd;\n\t\t\tselectedPrev = selected;\n\t\t\thighlighted = [selectedCode];\n\t\t\tfitFeatures(selectedCode);\n\t\t\tupdateURL();\n\t\t} else if (selectedCode != selected.lad19cd) {\n\t\t\tselected = selectedPrev = data.lad.find(d => d.lad19cd == selectedCode);\n\t\t\thighlighted = [selectedCode];\n\t\t\tfitFeatures(selectedCode);\n\t\t\tupdateURL();\n\t\t}\n\t}\n\n</script>\n\n<ONSHeader filled={true} center={false} />\n\n<main>\n<Header bgimage=\"./img/bg-map.png\" bgfixed={true} theme=\"dark\" center={false} short={true}>\n\t<h1>Exploring local income deprivation</h1>\n\t<p class=\"text-big\" style=\"margin-top: 5px\">\n\t\tA detailed picture of disparities within English local authorities to a neighbourhood level\n\t</p>\n\t<p style=\"margin-top: 20px\">\n\t\t24 May 2021\n\t</p>\n\t<p>\n\t\t<Toggle label=\"Animation {animation ? 'on' : 'off'}\" mono={true} bind:checked={animation}/>\n\t</p>\n\t<div style=\"margin-top: 90px;\">\n\t\t<Arrow color=\"white\" {animation}>Scroll to begin</Arrow>\n\t</div>\n</Header>\n\n<Filler theme=\"lightblue\" center={false} wide={true} short={true}>\n\t<p>\n\t\t<img src=\"./img/icon-location.svg\" style=\"height: 80px; margin-bottom: 20px; margin-top: -20px;\" alt=\"\" aria-hidden=\"true\"/>\n\t</p>\n\t<p class=\"text-big\">\n\t\tEconomic inequalities are not just regional, as we explored in <a href=\"https://www.ons.gov.uk/visualisations/dvc1370/\">this release</a> on income and productivity &mdash; but can occur between neighbourhoods too.\n\t</p>\n\t<p class=\"text-big\">\n\t\tThis article looks at levels of income deprivation, which is based on the proportion of people in an area who are out of work or on low earnings.\n\t</p>\n</Filler>\n\n{#if selected && selectedCode && data.geojson}\n<Section>\n\t<p>\n\t\tSelect a local authority area for a personalised look at income inequality in your area:<br/>\n\t\t<!-- svelte-ignore a11y-no-onchange -->\n\t\t<select bind:value={selected} on:change={dropSelect} aria-label=\"select an area\">\n\t\t\t{#each data.lad.sort((a, b) => a.lad19nm.localeCompare(b.lad19nm)) as d}\n\t\t\t<option value={d}>{d.lad19nm}</option>\n\t\t\t{/each}\n\t\t</select>\n\t</p>\n\t<h2 class=\"section-title\">Income deprivation in {selected.lad19nm}</h2>\n\t<p>\n\t\tIn <Em color={hiColor}>{selected.lad19nm}</Em>, <strong>{(selected.income * 100).toFixed(1)}%</strong> of the population was income-deprived in 2019. Of the 316 local authorities in England (excluding the Isles of Scilly), {selected.lad19nm} is ranked <strong>{data.lad.length - selected.income_rank + 1}{suffixer(data.lad.length - selected.income_rank + 1)} most income-deprived</strong>.\n\t</p>\n</Section>\n\n<Media col=\"medium\" height={300}>\n\t<h3 class=\"visuallyhidden\">Beeswarm chart showing English local authorities by percentage of people in income deprivation, 2019</h3>\n\t<div class=\"chart\" aria-hidden=\"true\">\n\t\t<BeeswarmChart data={data.lad} xKey=\"income\" bind:selected={selectedCode} bind:hovered on:select={chartSelect}/>\n\t\t<div class=\"label label-title\" style=\"top: calc(100% - 47px);\">\n\t\t\tEnglish local authorities by percentage of people in income deprivation, 2019\n\t\t</div>\n\t</div>\n</Media>\n\n<Divider hr={false} />\n\n<Scroller {threshold} bind:index={index[0]} splitscreen={true}>\n\t<div slot=\"background\" aria-hidden=\"true\">\n\t\t<figure>\n\t\t\t<div class=\"col-full height-full\" bind:this={element[0]}>\n\t\t\t\t<Map style={mapstyle} bind:map={map}>\n\t\t\t\t\t<MapSource\n\t\t\t\t\t\tid=\"lsoa\"\n\t\t\t\t\t\ttype=\"vector\"\n\t\t\t\t\t\turl={lsoaBldg.url}\n\t\t\t\t\t\tlayer={lsoaBldg.layer}\n\t\t\t\t\t\tpromoteId={lsoaBldg.code}\n\t\t\t\t\t\tmaxzoom={13}>\n\t\t\t\t\t\t{#if data.lsoa}\n\t\t\t\t\t\t<MapLayer\n\t\t\t\t\t\t\tid=\"lsoa\"\n\t\t\t\t\t\t\tsource=\"lsoa\"\n\t\t\t\t\t\t\tsourceLayer={lsoaBldg.layer}\n\t\t\t\t\t\t\tdata={data.lsoa}\n\t\t\t\t\t\t\tgeoCode={lsoaBldg.code}\n\t\t\t\t\t\t\tcolorCode='color'\n\t\t\t\t\t\t\ttype=\"fill\"\n\t\t\t\t\t\t\tminzoom={5}\n\t\t\t\t\t\t\tpaint={{\n\t\t\t\t\t\t\t\t'fill-color': ['case',\n\t\t\t\t\t\t\t\t\t['!=', ['feature-state', 'color'], null], ['feature-state', 'color'],\n\t\t\t\t\t\t\t\t\t'rgba(255, 255, 255, 0)'\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\torder=\"aeroway-taxiway\" />\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t</MapSource>\n\t\t\t\t\t{#if data.geojson}\n\t\t\t\t\t<MapSource\n\t\t\t\t\t\tid=\"lad\"\n\t\t\t\t\t\ttype=\"geojson\"\n\t\t\t\t\t\tdata={data.geojson}\n\t\t\t\t\t\tpromoteId={ladBounds.code}\n\t\t\t\t\t\tmaxzoom={13}>\n\t\t\t\t\t\t<MapLayer\n\t\t\t\t\t\t\tid=\"lad\"\n\t\t\t\t\t\t\tsource=\"lad\"\n\t\t\t\t\t\t\thover={true}\n\t\t\t\t\t\t\tbind:hovered={hovered}\n\t\t\t\t\t\t\tclick={true}\n\t\t\t\t\t\t\tignoreClick={!explorer}\n\t\t\t\t\t\t\tbind:selected={selectedCode}\n\t\t\t\t\t\t\ton:select={mapSelect}\n\t\t\t\t\t\t\ttype=\"fill\"\n\t\t\t\t\t\t\tpaint={{\n\t\t\t\t\t\t\t\t'fill-color': 'rgba(255,255,255,0)'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\torder=\"place_other\" />\n\t\t\t\t\t\t<MapLayer\n\t\t\t\t\t\t\tid=\"lad-fill\"\n\t\t\t\t\t\t\tsource=\"lad\"\n\t\t\t\t\t\t\thighlight={true}\n\t\t\t\t\t\t\thighlighted={filled}\n\t\t\t\t\t\t\thighlightKey=\"filled\"\n\t\t\t\t\t\t\ttype=\"fill\"\n\t\t\t\t\t\t\tpaint={{\n\t\t\t\t\t\t\t\t'fill-color': ['case',\n\t\t\t\t\t\t\t\t\t['==', ['feature-state', 'filled'], true], fillColor,\n\t\t\t\t\t\t\t\t\t'rgba(192, 192, 192, 0)'\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\torder=\"place_other\" />\n\t\t\t\t\t\t<MapLayer\n\t\t\t\t\t\t\tid=\"lad-bounds\"\n\t\t\t\t\t\t\tsource=\"lad\"\n\t\t\t\t\t\t\thighlight={true}\n\t\t\t\t\t\t\thighlighted={highlighted}\n\t\t\t\t\t\t\ttype=\"line\"\n\t\t\t\t\t\t\tpaint={{\n\t\t\t\t\t\t\t\t'line-color': ['case',\n\t\t\t\t\t\t\t\t\t['==', ['feature-state', 'hovered'], true], 'orange',\n\t\t\t\t\t\t\t\t\t['==', ['feature-state', 'highlighted'], true], 'black',\n\t\t\t\t\t\t\t\t\t'rgba(128, 128, 128, 0.3)'\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t'line-width': ['case',\n\t\t\t\t\t\t\t\t\t['==', ['feature-state', 'hovered'], true], 3,\n\t\t\t\t\t\t\t\t\t['==', ['feature-state', 'highlighted'], true], 3,\n\t\t\t\t\t\t\t\t\t1\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\torder=\"place_other\" />\n\t\t\t\t\t</MapSource>\n\t\t\t\t\t{/if}\n\t\t\t\t</Map>\n\t\t\t\t<div id=\"legend\" class=\"no-hover\" aria-hidden=\"true\">\n\t\t\t\t\t{#if legend == \"skew\" && highlightedTitle && highlightedDist}\n\t\t\t\t\t{#if hovered && highlightedData && highlightedData.map(d => d.lad19cd).includes(hovered)}\n\t\t\t\t\t<p class=\"front outline\">\n\t\t\t\t\t\t<strong>{data.lad.find(d => d.lad19cd == hovered).lad19nm}</strong>\n\t\t\t\t\t</p>\n\t\t\t\t\t<div class=\"chart\" style=\"height: 160px\">\n\t\t\t\t\t\t<ColumnChart\n\t\t\t\t\t\t\tdata={[\n\t\t\t\t\t\t\t\t{ label: '1', value: (data.indexed[hovered].deciles.d1 / data.indexed[hovered].count) * 100, color: colors[0] },\n\t\t\t\t\t\t\t\t{ label: '2', value: (data.indexed[hovered].deciles.d2 / data.indexed[hovered].count) * 100, color: colors[1] },\n\t\t\t\t\t\t\t\t{ label: '3', value: (data.indexed[hovered].deciles.d3 / data.indexed[hovered].count) * 100, color: colors[2] },\n\t\t\t\t\t\t\t\t{ label: '4', value: (data.indexed[hovered].deciles.d4 / data.indexed[hovered].count) * 100, color: colors[3] },\n\t\t\t\t\t\t\t\t{ label: '5', value: (data.indexed[hovered].deciles.d5 / data.indexed[hovered].count) * 100, color: colors[4] },\n\t\t\t\t\t\t\t\t{ label: '6', value: (data.indexed[hovered].deciles.d6 / data.indexed[hovered].count) * 100, color: colors[5] },\n\t\t\t\t\t\t\t\t{ label: '7', value: (data.indexed[hovered].deciles.d7 / data.indexed[hovered].count) * 100, color: colors[6] },\n\t\t\t\t\t\t\t\t{ label: '8', value: (data.indexed[hovered].deciles.d8 / data.indexed[hovered].count) * 100, color: colors[7] },\n\t\t\t\t\t\t\t\t{ label: '9', value: (data.indexed[hovered].deciles.d9 / data.indexed[hovered].count) * 100, color: colors[8] },\n\t\t\t\t\t\t\t\t{ label: '10', value: (data.indexed[hovered].deciles.d10 / data.indexed[hovered].count) * 100, color: colors[9] }\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\tyDomain={[0, 30]}\n\t\t\t\t\t\t\t{colors}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class=\"label outline label-dark\" style=\"left: 0; top: -4px;\">Neighbourhoods by income deprivation</div>\n\t\t\t\t\t\t<div class=\"label\" style=\"left: 0\">&larr; More deprived</div>\n\t\t\t\t\t\t<div class=\"label\" style=\"right: 0\">Less deprived &rarr;</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{:else}\n\t\t\t\t\t<p class=\"front outline\">\n\t\t\t\t\t\t<strong>{highlightedTitle}</strong>\n\t\t\t\t\t</p>\n\t\t\t\t\t<div class=\"chart\" style=\"height: 160px\">\n\t\t\t\t\t\t<ColumnChart\n\t\t\t\t\t\t\tdata={[\n\t\t\t\t\t\t\t\t{ label: '1', value: distributions[highlightedDist].deciles[0], color: colors[0] },\n\t\t\t\t\t\t\t\t{ label: '2', value: distributions[highlightedDist].deciles[1], color: colors[1] },\n\t\t\t\t\t\t\t\t{ label: '3', value: distributions[highlightedDist].deciles[2], color: colors[2] },\n\t\t\t\t\t\t\t\t{ label: '4', value: distributions[highlightedDist].deciles[3], color: colors[3] },\n\t\t\t\t\t\t\t\t{ label: '5', value: distributions[highlightedDist].deciles[4], color: colors[4] },\n\t\t\t\t\t\t\t\t{ label: '6', value: distributions[highlightedDist].deciles[5], color: colors[5] },\n\t\t\t\t\t\t\t\t{ label: '7', value: distributions[highlightedDist].deciles[6], color: colors[6] },\n\t\t\t\t\t\t\t\t{ label: '8', value: distributions[highlightedDist].deciles[7], color: colors[7] },\n\t\t\t\t\t\t\t\t{ label: '9', value: distributions[highlightedDist].deciles[8], color: colors[8] },\n\t\t\t\t\t\t\t\t{ label: '10', value: distributions[highlightedDist].deciles[9], color: colors[9] }\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\tyDomain={[0, 30]}\n\t\t\t\t\t\t\t{colors}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class=\"label outline label-dark\" style=\"left: 0; top: -4px;\">Neighbourhoods by income deprivation</div>\n\t\t\t\t\t\t<div class=\"label\" style=\"left: 0\">&larr; More deprived</div>\n\t\t\t\t\t\t<div class=\"label\" style=\"right: 0\">Less deprived &rarr;</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\t\t\t\t\t{:else if legend == \"bars\"}\n\t\t\t\t\t<p class=\"front outline\">\n\t\t\t\t\t\t<strong>{selected.lad19nm}</strong>\n\t\t\t\t\t</p>\n\t\t\t\t\t<div class=\"chart\" style=\"height: 160px\">\n\t\t\t\t\t\t<ColumnChart\n\t\t\t\t\t\t\tdata={[\n\t\t\t\t\t\t\t\t{ label: '1', value: (selected.deciles.d1 / selected.count) * 100, color: colors[0] },\n\t\t\t\t\t\t\t\t{ label: '2', value: (selected.deciles.d2 / selected.count) * 100, color: colors[1] },\n\t\t\t\t\t\t\t\t{ label: '3', value: (selected.deciles.d3 / selected.count) * 100, color: colors[2] },\n\t\t\t\t\t\t\t\t{ label: '4', value: (selected.deciles.d4 / selected.count) * 100, color: colors[3] },\n\t\t\t\t\t\t\t\t{ label: '5', value: (selected.deciles.d5 / selected.count) * 100, color: colors[4] },\n\t\t\t\t\t\t\t\t{ label: '6', value: (selected.deciles.d6 / selected.count) * 100, color: colors[5] },\n\t\t\t\t\t\t\t\t{ label: '7', value: (selected.deciles.d7 / selected.count) * 100, color: colors[6] },\n\t\t\t\t\t\t\t\t{ label: '8', value: (selected.deciles.d8 / selected.count) * 100, color: colors[7] },\n\t\t\t\t\t\t\t\t{ label: '9', value: (selected.deciles.d9 / selected.count) * 100, color: colors[8] },\n\t\t\t\t\t\t\t\t{ label: '10', value: (selected.deciles.d10 / selected.count) * 100, color: colors[9] }\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\tyDomain={[0, 30]}\n\t\t\t\t\t\t\t{colors}\n\t\t\t\t\t\t\t{quintiles}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{#if explorer}\n\t\t\t\t\t\t<div class=\"label outline label-dark\" style=\"left: 0; top: -4px;\">{distributions[selected.type].name}</div>\n\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t<div class=\"label outline label-dark\" style=\"left: 0; top: -4px;\">Neighbourhoods by income deprivation</div>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t<div class=\"label\" style=\"left: 0\">&larr; More deprived</div>\n\t\t\t\t\t\t<div class=\"label\" style=\"right: 0\">Less deprived &rarr;</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{:else if legend == \"hibars\" && highlighted[0]}\n\t\t\t\t\t{#each [ data.lad.find(d => d.lad19cd == highlighted[0]) ] as selected}\n\t\t\t\t\t<p class=\"front outline\">\n\t\t\t\t\t\t<strong>{selected.lad19nm}</strong>\n\t\t\t\t\t</p>\n\t\t\t\t\t<div class=\"chart\" style=\"height: 160px\">\n\t\t\t\t\t\t<ColumnChart\n\t\t\t\t\t\t\tdata={[\n\t\t\t\t\t\t\t\t{ label: '1', value: (selected.deciles.d1 / selected.count) * 100, color: colors[0] },\n\t\t\t\t\t\t\t\t{ label: '2', value: (selected.deciles.d2 / selected.count) * 100, color: colors[1] },\n\t\t\t\t\t\t\t\t{ label: '3', value: (selected.deciles.d3 / selected.count) * 100, color: colors[2] },\n\t\t\t\t\t\t\t\t{ label: '4', value: (selected.deciles.d4 / selected.count) * 100, color: colors[3] },\n\t\t\t\t\t\t\t\t{ label: '5', value: (selected.deciles.d5 / selected.count) * 100, color: colors[4] },\n\t\t\t\t\t\t\t\t{ label: '6', value: (selected.deciles.d6 / selected.count) * 100, color: colors[5] },\n\t\t\t\t\t\t\t\t{ label: '7', value: (selected.deciles.d7 / selected.count) * 100, color: colors[6] },\n\t\t\t\t\t\t\t\t{ label: '8', value: (selected.deciles.d8 / selected.count) * 100, color: colors[7] },\n\t\t\t\t\t\t\t\t{ label: '9', value: (selected.deciles.d9 / selected.count) * 100, color: colors[8] },\n\t\t\t\t\t\t\t\t{ label: '10', value: (selected.deciles.d10 / selected.count) * 100, color: colors[9] }\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\tyDomain={[0, 30]}\n\t\t\t\t\t\t\t{colors}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class=\"label outline label-dark\" style=\"left: 0; top: -4px;\">Neighbourhoods by income deprivation</div>\n\t\t\t\t\t\t<div class=\"label\" style=\"left: 0\">&larr; More deprived</div>\n\t\t\t\t\t\t<div class=\"label\" style=\"right: 0\">Less deprived &rarr;</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/each}\n\t\t\t\t\t{:else if legend == \"area\" && hoveredArea}\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<strong>{hoveredArea.lad19nm}</strong>\n\t\t\t\t\t\t<span class=\"text-small\">{(hoveredArea.income * 100).toFixed(1)}% income-deprived</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t{/if}\n\t\t\t\t\t{#if explorer}\n\t\t\t\t\t<table class=\"table-inset\">\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Income deprivation</td><td class=\"number\"><strong>{(selected.income * 100).toFixed(1)}%</strong> <span class=\"text-muted\">({317 - selected.income_rank} of 316)</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td colspan=\"2\" style=\"padding-bottom: 6px\"><RankChart count={317} rank={317 - selected.income_rank}/></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Internal disparity</td><td class=\"number\"><strong>{((selected.range) * 100).toFixed(1)}pp</strong> <span class=\"text-muted\">({317 - selected.range_rank} of 316)</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td colspan=\"2\" style=\"padding-bottom: 6px\"><RankChart count={317} rank={317 - selected.moran_rank}/></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Moran's I</td><td class=\"number\"><strong>{selected.moran}</strong> <span class=\"text-muted\">({317 - selected.moran_rank} of 316)</span></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td colspan=\"2\"><RankChart count={317} rank={317 - selected.moran_rank}/></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</figure>\n\t</div>\n\n\t<div slot=\"foreground\">\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>\n\t\t\t\t\tOf the {selected.count} neighbourhoods in {selected.lad19nm}, {selected.deciles.d1 + selected.deciles.d2 > 0 ? selected.deciles.d1 + selected.deciles.d2 : 'none'} {selected.deciles.d1 + selected.deciles.d2 == 1 ? 'was' : 'were'} among the 20 percent <Em color={colors[1]} nowrap={false}>most income-deprived</Em> in England. This is shown in the first two bars in the chart on the top right in red.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>\n\t\t\t\t\tOf the {selected.count} neighbourhoods in {selected.lad19nm}, {selected.deciles.d10 + selected.deciles.d9 > 0 ? selected.deciles.d10 + selected.deciles.d9 : 'none'} {selected.deciles.d10 + selected.deciles.d9 == 1 ? 'was' : 'were'} in the 20 percent <Em color={colors[8]} nowrap={false}>least income-deprived</Em> in England, seen on the last two bars of the chart in blue.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>\n\t\t\t\t\tOverall, there are <strong>32,844 statistical neighbourhoods</strong> in England, known as lower layer super output areas (LSOAs). For each local authority there is a unique distribution of neighbourhoods across different levels of income deprivation, as seen in the chart.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>\n\t\t\t\t\tTo help identify trends across the country, we have grouped local authorities into <strong>four income deprivation profiles</strong>, according to the distribution shape they match most closely.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<h3>More income-deprived</h3>\n\t\t\t\t<p>\n\t\t\t\t\tIn a <Em color={fillColor}>more income-deprived</Em> profile, areas have more neighbourhoods towards the deprived end of the scale. Areas matching this profile are mostly urban areas, including in <strong>Greater London</strong>, around <strong>Birmingham</strong>, and in the <strong>north east</strong>.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tHover over the <Em color={fillColor} nowrap={false}>highlighted areas</Em> to see their income deprivation distributions.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>\n\t\t\t\t\tThere are some more deprived areas outside of urban centres, including some coastal towns, such as <Em color={fillColor}>Great Yarmouth</Em>, <Em color={fillColor}>Hastings</Em> and <Em color={fillColor}>Blackpool</Em>.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<h3>Less income-deprived</h3>\n\t\t\t\t<p>\n\t\t\t\t\tContrastingly, local authorities with a <Em color={fillColor} nowrap={false}>less income-deprived</Em> profile are generally inland areas with a mix of urban and rural characteristics.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>\n\t\t\t\t\tMany of these are areas within the south of England, including the three least deprived areas in the country &mdash; <strong>Hart</strong>, <strong>Wokingham</strong> and <strong>South Northamptonshire</strong>.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>\n\t\t\t\t\tThis profile also include areas in the <strong>Midlands</strong> and <strong>the north of the country</strong>.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<h3>'n'-shaped profile</h3>\n\t\t\t\t<p>\n\t\t\t\t\tLooking at an <Em color={fillColor} nowrap={false}>'n'-shaped profile</Em>, where more neighbourhoods have close to average levels of income deprivation, we see mostly rural and coastal areas.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>\n\t\t\t\t\tThese include most of the <strong>south coast</strong> of England and the <strong>Norfolk coastline</strong>. A significant number of <strong>urban areas in London</strong> and rural areas close to the <strong>Welsh border</strong> also fit within this category.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<h3>Flat profile</h3>\n\t\t\t\t<p>\n\t\t\t\t\tThe remaining local authorities can be broadly categorised as having a <Em color={fillColor}>flat profile</Em>, showing a relatively even percentage of neighbourhoods across different levels of income deprivation.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>\n\t\t\t\t\tThis category includes several bigger towns and cities, including <Em color={fillColor}>Bristol</Em> and <Em color={fillColor}>Oxford</Em> in the south and <Em color={fillColor}>Worcester</Em> and <Em color={fillColor}>Northampton</Em> in the Midlands, alongside relatively rural areas around cities in the north of England.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>\n\t\t\t\t\tThis grouping also includes local authorities with a significant number of neighbourhoods with high and low levels of deprivation, but with relatively few that have a middling level of deprivation, including <Em color={fillColor}>Derby</Em> and <Em color={fillColor}>Wigan</Em>.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</Scroller>\n\n<Divider/>\n\n<Section>\n\t<h2 class=\"section-title\">Local extremes</h2>\n\t<p>\n\t\tWe can also examine the gap between the most and least deprived neighbourhoods in each local authority, to see which have the greatest gaps between the extremes.\n\t</p>\n</Section>\n\n<Media\n\tcol=\"medium\"\n\tgrid=\"full\"\n\theight={60}\n\tcaption=\"Range and population weighted average of income deprivation levels for neighbourhoods within {selected.lad19nm}\">\n\t<div><DotPlotChart labels={true} height={60} data={[data.lad.find(d => d.lad19cd == selected.lad19cd)].map(d => { return {label: d.lad19nm, min: d.min, max: d.max, avg: d.income }})}/></div>\n</Media>\n\n<Section>\n\t<p>\n\t\tIn the <Em color={colors[8]}>least deprived</Em> neighbourhood in {selected.lad19nm}, <strong>{(selected.min * 100).toFixed(1)}% of people</strong> are estimated to be income-deprived. In the <Em color={colors[1]}>most deprived</Em> neighbourhood, <strong>{(selected.max * 100).toFixed(1)}% of people</strong> are estimated to be income-deprived. The gap between these two, which we will call internal disparity, is <strong>{(selected.range * 100).toFixed(1)} percentage points</strong> in {selected.lad19nm}. We also know the <Em color=\"darkgrey\" nowrap={false}>overall income deprivation</Em> score for {selected.lad19nm} is <strong>{(selected.income * 100).toFixed(1)}%</strong>.\n\t</p>\n\t<p>\n\t\tWe should note a small deprivation gap does not necessarily imply there is no deprivation, it may just mean income deprivation is evenly spread throughout the local authority, rather than concentrated in a few neighbourhoods.\n\t</p>\n</Section>\n\n<Divider/>\n\n<Section>\n\t<h2 class=\"section-title\">Largest and smallest income gaps</h2>\n\t<p>\n\t\tRanking local authorities by deprivation gap shows that it is often local authorities with the highest income deprivation that tend to have the greatest internal disparities.\n\t</p>\n\t<p>\n\t\tOf the 20 local authorities with the largest deprivation gap between neighbourhoods, 17 are urban areas in the north or Midlands.\n\t</p>\n</Section>\n\n<Media\n\tcol=\"medium\"\n\tgrid=\"full\"\n\theight={400}\n\tcaption=\"The 20 local authorities with the largest gap between their most and least income-deprived neighbourhoods.\">\n\t<div><DotPlotChart data={data.lad.sort((a, b) => (b.range) - (a.range)).slice(0, 20).map(d => { return {label: d.lad19nm, min: d.min, max: d.max, avg: d.income }}).reverse()}/></div>\n</Media>\n\n<Section>\n\t<p>\n\t\tThese high disparity places are some of the areas that <strong>rank lowest for household income measures</strong> too. We found 14 of these 20 areas were in the bottom 20% nationally for household income in 2018 (gross disposable household income per capita or GDHI), and all of them were in the bottom 50% nationally.\n\t</p>\n\t<p>\n\t\tFollowing the categories we identified earlier, 15 of the 20 authorities in this gap list also best match a <strong>\"more income-deprived\"</strong> profile, with a high proportion of more deprived neighbourhoods.\n\t</p>\n\t<p>\n\t\tThe opposite is true of the 20 local authorities with the smallest deprivation gaps. All are non-coastal, 13 are rural and best match a <strong>\"less income-deprived\"</strong> profile, with a high proportion of the least deprived neighbourhoods nationally.\n\t</p>\n</Section>\n\n<Media\n\tcol=\"medium\"\n\tgrid=\"full\"\n\theight={400}\n\tcaption=\"The 20 local authorities with the smallest gap between their most and least income-deprived neighbourhoods.\">\n\t<div><DotPlotChart data={data.lad.sort((a, b) => (a.range) - (b.range)).slice(0, 20).map(d => { return {label: d.lad19nm, min: d.min, max: d.max, avg: d.income }}).reverse()}/></div>\n</Media>\n\n<Section>\n\t<p>\n\t\tOf these low disparity areas, 10 were in the top 20% of local authorities for household income (GDHI) in 2018, and 18 areas were in the top 50%.\n\t</p>\n\t<p>\n\t\tBy this measure, local authorities with the smallest internal disparities tend to be rural, high income, and non-coastal; while the greatest internal disparities are often found in authorities that are urban, low income, and in the north and Midlands.\n\t</p>\n</Section>\n\n<Divider/>\n\n<Section>\n\t<h2 class=\"section-title\">How income deprivation is clustered</h2>\n\t<p>\n\t\tAn alternative way of looking at inequality in an area is to measure how inter-mixed the most and least deprived neighbourhoods are.\n\t</p>\n\t<p>\n\t\tWe can see the extent to which neighbourhoods of the same income level are clustered together using an index called Moran’s I.\n\t</p>\n</Section>\n\n<Media\n\tcol=\"medium\"\n\tgrid=\"narrow\"\n\tcaption=\"Grids representing the theoretical extremes of Moran's I.<br/>From left to right: Uniform distribution (-1). Random distribution (0). Highly clustered/separated (+1).\">\n\t<div><Chessboard dim={5} dist={0}/></div>\n\t<div><Chessboard dim={5} dist={2}/></div>\n\t<div><Chessboard dim={5} dist={1}/></div>\n</Media>\n\n<Section>\n\t<p>\n\t\tMoran's I is measured from -1 to +1, where +1 is highly clustered, and -1 is like a chessboard, with a completely uniform mix of high and low deprivation neighbourhoods.\n\t</p>\n</Section>\n\n<Divider hr={false}/>\n\n<Scroller {threshold} bind:index={index[1]} splitscreen={true}>\n\t<div slot=\"background\" aria-hidden=\"true\">\n\t\t<figure>\n\t\t\t<div class=\"col-full height-full\" bind:this={element[1]}>\n\t\t\t\t<!-- Div reserved for map and legend -->\n\t\t\t</div>\n\t\t</figure>\n\t</div>\n\n\t<div slot=\"foreground\">\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p><strong>Middlesbrough</strong> has a very high Moran's I, relatively close to 1. This is clearly identified by the separation of neighbourhoods in the north and south of the local authority, with high and low levels of income deprivation, respectively.</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p><strong>Kensington and Chelsea</strong> has the highest Moran's I in England. Despite having one of the highest average household incomes in England, the north of Kensington and Chelsea has some of the most income-deprived neighbourhoods. Grenfell Tower is in this more deprived area.</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>By contrast, <strong>Tamworth</strong>, near <strong>Birmingham</strong>, has a relatively low Moran's I value. High and low deprivation neighbourhoods are more mixed together.</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>Lower Moran's I is more common in rural and sparsely populated areas. <strong>East Cambridgeshire</strong> has the lowest Moran's I in England (apart from the City of London, which only has six neighbourhoods).</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>Conversely, <strong>North Somerset</strong> is a predominantly rural area but has a high Moran's I. This is primarily because of a concentrated area of high income deprivation in <strong>Weston-super-Mare</strong>, its largest urban area.</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>This shows how Moran's I is affected by local authority boundaries. For example, the southern part of <strong>Sefton</strong> has a high level of deprivation, although this area is effectively a continuation of central <strong>Liverpool</strong>.</p>\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</Scroller>\n\n<Section>\n\t<h2 class=\"section-title\">Income deprivation levels and Moran's I</h2>\n\t<p>In this section, we look at deprivation clustering &mdash; how mixed together neighbourhoods of different deprivation levels are within a local authority area &mdash; and how that relates to the overall percentage of people in that area that are income-deprived.</p>\n</Section>\n\n<Divider hr={false}/>\n\n<Scroller {threshold} bind:index={index[3]} splitscreen={true}>\n\t<div slot=\"background\">\n\t\t<figure>\n\t\t\t<div class=\"col-wide height-full middle\">\n\t\t\t\t<h3 class=\"visuallyhidden\">Interactive scatter chart showing a positive correlation between income deprivation and Moran's I</h3>\n\t\t\t\t<div class=\"chart chart-full\" aria-hidden=\"true\">\n\t\t\t\t\t<BeeswarmChart\n\t\t\t\t\t\tdata={data.lad}\n\t\t\t\t\t\txKey={scatter.xKey}\n\t\t\t\t\t\tyKey={scatter.yKey}\n\t\t\t\t\t\tzKey={scatter.zKey}\n\t\t\t\t\t\tcolors={scatter.colors}\n\t\t\t\t\t\tselected={scatter.selected}\n\t\t\t\t\t\tclick={false}\n\t\t\t\t\t\tbind:hovered\n\t\t\t\t\t\t{highlighted}\n\t\t\t\t\t\t{animation}\n\t\t\t\t\t\tmargins={{ top: 0, bottom: 23, left: 20, right: 80 }}/>\n\t\t\t\t\t\t<div class=\"label outline\" style=\"right: 15%; bottom: 25%\">More income-deprived &rarr;</div>\n\t\t\t\t\t\t{#if scatter.yKey}\n\t\t\t\t\t\t<div class=\"label label-y outline\" style=\"left: calc(20px + 5%); top: 30px;\">Higher Moran's I &rarr;</div>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t<div class=\"label label-title\" style=\"top: 100%;\">\n\t\t\t\t\t\t\t{#if !scatter.yKey}\n\t\t\t\t\t\t\tEnglish local authorities by percentage of people in income deprivation, 2019\n\t\t\t\t\t\t\t{:else if scatter.zKey == \"ruc\"}\n\t\t\t\t\t\t\tIncome deprivation and Moran's I in rural and urban local authorities, 2019\n\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\tIncome deprivation by Moran's I, English local authorities, 2019\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</figure>\n\t</div>\n\n\t<div slot=\"foreground\">\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>We can take our original chart of income deprivation by local authority and then plot this against Moran's I.</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>Areas with a higher overall level of income deprivation generally <strong>tend to have a higher Moran's I</strong>, with neighbourhoods of similar deprivation clustered together.</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>However, local authorities with very similar rates of income deprivation overall may have <strong>very different levels of deprivation clustering</strong>.</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>Grouping local authorities by income deprivation level shows a <strong>wide range of Moran's I values</strong> in each income deprivation band.</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p><strong>Tameside</strong> and <strong>Sefton</strong> are both in the 20% most income-deprived local authorities, but Tameside has a low Moran's I and Sefton has the second highest Moran's I in England.</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>We see places can also have <strong>similar levels of Moran's I</strong>, despite having very <strong>different levels of income deprivation</strong>.</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>For example, <strong>Middlesbrough</strong>, <strong>Liverpool</strong>, <strong>West Lancashire</strong> and <strong>Solihull</strong> all rank in the top ten for Moran's I in England.</p>\n\t\t\t\t<p>Middlesbrough and Liverpool have <strong>high income deprivation</strong> but West Lancashire and Solihull have <strong>below average deprivation</strong>.</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<h3>Income deprivation clustering is lower in rural areas</h3>\n\t\t\t\t<p>Comparing <Em color={scatterColors.ruc[1]}>urban</Em> and <Em color={scatterColors.ruc[0]}>rural</Em> local authorities shows other trends. (Some newly-formed authorities have <Em color={scatterColors.ruc[2]} nowrap={true}>no urban-rural classification</Em>.)</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>Generally, the <strong>more deprived</strong> and <strong>more clustered</strong> local authorities are <Em color={scatterColors.ruc[1]}>urban</Em>, although there are some urban areas that have lower income deprivation and low clustering.</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>Contrastingly, <Em color={scatterColors.ruc[0]}>rural areas</Em> generally have <strong>lower income deprivation</strong> and <strong>lower levels of deprivation clustering</strong>.</p>\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</Scroller>\n\n<Section>\n\t<h2 class=\"section-title\">Disparity and \"levelling up\"</h2>\n\t<p>Each of these measures helps build a picture of economic inequalities not just between local authorities, but also within areas at a neighbourhood level.</p>\n\t<p>With the current focus on \"levelling up\", knowledge of these local circumstances and detail is of increasing importance.</p>\n\t<p>Across the measures shown in this article, we see it is generally urban local authorities with a higher level of overall income deprivation that have the greatest internal disparities, both in terms of deprivation gap and income deprivation clustering. However, we also see several exceptions and that every local area has its own unique profile of income disparity.</p>\n</Section>\n\n<Divider/>\n\n<Section>\n\t<h2 class=\"section-title\">Explore the data</h2>\n\t<p>\n\t\tYou can use the map below to explore data for every local authority.\n\t</p>\n</Section>\n\n<Divider hr={false}/>\n\n<Scroller {threshold} bind:index={index[2]} splitscreen={true}>\n\t<div slot=\"background\" aria-hidden=\"true\">\n\t\t<figure>\n\t\t\t<div class=\"col-full height-full\" bind:this={element[2]}>\n\t\t\t\t<!-- Div reserved for map and legend -->\n\t\t\t</div>\n\t\t</figure>\n\t</div>\n\n\t<div slot=\"foreground\">\n\t\t<section>\n\t\t\t<div class=\"col-medium\" style=\"pointer-events: all\">\n\t\t\t\t<p>\n\t\t\t\t\tSelect an area on the map or drop-down menu to see how it compares for income deprivation measures.\n\t\t\t\t</p>\n\t\t\t\t<!-- svelte-ignore a11y-no-onchange -->\n\t\t\t\t<select bind:value={selected} on:change={dropSelect} aria-label=\"select an area\">\n\t\t\t\t\t{#each data.lad.sort((a, b) => a.lad19nm.localeCompare(b.lad19nm)) as d}\n\t\t\t\t\t<option value={d}>{d.lad19nm}</option>\n\t\t\t\t\t{/each}\n\t\t\t\t</select><br/>\n\t\t\t\t<button class=\"text-small\" on:click={() => fitFeatures(selectedCode)}>\n\t\t\t\t\t<img src=\"./img/icon-zoom.svg\" class=\"svg-icon\" alt=\"\" aria-hidden=\"true\"/>Zoom in\n\t\t\t\t</button>\n\t\t\t\t<button class=\"text-small\" on:click={() => fitBounds(mapbounds.eng)}>\n\t\t\t\t\t<img src=\"./img/icon-reset.svg\" class=\"svg-icon\" alt=\"\" aria-hidden=\"true\"/>Reset zoom\n\t\t\t\t</button>\n\t\t\t\t<p style=\"margin-top: 40px\">\n\t\t\t\t\t<Arrow {animation}><strong>Scroll to see the data</strong></Arrow>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</Scroller>\n\t\n<Divider/>\n\n<Media\n\tcol=\"wide\"\n\tgrid=\"full\"\n\theight={20}>\n\t<div>\n\t\t<input placeholder=\"Type to filter table...\" bind:value={filter}/>\n\t</div>\n</Media>\n\n<Media\n\tcol=\"wide\"\n\tgrid=\"full\"\n\theight={500}>\n\t<div>\n\t\t<Table\n\t\t\tdata={data.lad.map(d => {return {'Area': d.lad19nm, 'Distribution': distributions[d.type].short, 'Urban/rural classification': d.ruc11nm, \"% Income deprivation\": +(d.income * 100).toFixed(1), \"% Internal disparity\": +(d.range * 100).toFixed(1), \"Moran's I\": d.moran != null ? +d.moran.toFixed(2): null} })}\n\t\t\theight={500}\n\t\t\tsort='% Income deprivation'\n\t\t\tasc={false}\n\t\t\trank={true}\n\t\t\t{filter}\n\t\t\tfilterCol=\"Area\"\n\t\t\tselected={selected.lad19nm}\n\t\t\tselectedCol=\"Area\"\n\t\t\tcollapse={['Distribution', 'Urban/rural classification']}\n\t\t/>\n\t</div>\n</Media>\n{/if}\n\n<Divider />\n\n<Section>\n\t<h2 class=\"section-title\">More information</h2>\n\t<p>This article is part of a two-part interactive series on economic disparities, the first part of which showed <a href=\"https://www.ons.gov.uk/visualisations/dvc1370/\" data-gtm-type=\"related-release\">regional level differences in household income and productivity</a> across the UK.</p>\n\t<p>The local level analysis in this publication was based on income deprivation as recorded in the <a href=\"https://www.gov.uk/government/statistics/english-indices-of-deprivation-2019\" data-gtm-type=\"external-link\" target=\"_blank\" rel=\"noopener\">English Indices of Multiple Deprivation, 2019</a>, and is influenced by Alasdair Rae and Elvis Nyanzu's <a href=\"https://alasdairrae.github.io/atlasofinequality/\" data-gtm-type=\"external-link\" target=\"_blank\" rel=\"noopener\">An English Atlas of Inequality</a>.</p>\n\t<p><a href=\"https://www.ons.gov.uk/peoplepopulationandcommunity/personalandhouseholdfinances/incomeandwealth/datasets/mappingincomedeprivationatalocalauthoritylevel\" data-gtm-type=\"related-data\">Data tables</a> have been published alongside <a href=\"https://www.ons.gov.uk/releases/mappingincomedeprivationatalocalauthoritylevel2019\" data-gtm-type=\"related-release\">this release</a> for easier reference.</p>\n</Section>\n\n<Divider/>\n\n<Section>\n\t<h2>Tell us what you think</h2>\n\t<p>This article uses one of a number of formats that we are developing to present data from the 2021 Census. If you have 5 minutes to spare, please take the time to <a href=\"https://www.surveymonkey.co.uk/r/QSKCYMV\" data-gtm-type=\"external-link\" target=\"_blank\">fill in this survey</a> to give us your views.</p>\n\t<p></p>\n</Section>\n</main>\n\n<ONSFooter />\n\n<style>\n\t/* Styles specific to elements within the demo */\n\t:global(svelte-scroller-foreground) {\n\t\tpointer-events: none !important;\n\t}\n\tinput {\n\t\tposition: relative;\n\t\tfont-size: 16px;\n\t\tz-index: 1;\n\t}\n\tselect {\n\t\tposition: relative;\n\t\tmax-width: 325px;\n\t\tmargin-top: 20px;\n\t\tmargin-bottom: 0;\n\t}\n\tbutton {\n\t\tcursor: pointer;\n\t\tfont-size: 14px;\n\t\tfont-weight: bold;\n\t\tmargin-top: 5px;\n\t}\n\t.svg-icon {\n\t\twidth: 24px;\n\t\theight: 24px;\n\t\tmargin-right: 4px;\n\t}\n\t#legend {\n\t\tposition: absolute;\n\t\tz-index: 10;\n\t\t-webkit-box-sizing: border-box;\n\t\t        box-sizing: border-box;\n\t\tpadding: 6px 15px 12px 15px;\n\t\twidth: 320px;\n\t\tright: 0;\n\t\ttop: 0;\n\t\tbackground-color: rgba(255, 255, 255, 0.85);\n\t}\n\t#legend p {\n\t\tmargin-top: 0;\n\t\tmargin-bottom: 12px;\n\t}\n\t.chart {\n\t\tposition: relative;\n\t}\n\t.label {\n\t\tposition: absolute;\n\t\tbottom: 0;\n\t\tfont-size: 14px;\n\t\tcolor: #666;\n\t}\n\t.label-y {\n\t\ttop: 0px;\n\t\ttext-align: right;\n\t\t-webkit-writing-mode: vertical-rl;\n\t\t-ms-writing-mode: tb-rl;\n\t\twriting-mode: vertical-rl;\n\t\t-webkit-transform: rotate(-180deg);\n\t\t-ms-transform: rotate(-180deg);\n\t\ttransform: rotate(-180deg);\n\t}\n\t.label-title {\n\t\tcolor: #333;\n\t\tfont-weight: bold;\n\t}\n\t.label-dark {\n\t\tcolor: #333;\n\t}\n\t.outline {\n\t\ttext-shadow: white 1px 1px 0px,\n\t\t\twhite 1px -1px 0px,\n\t\t\twhite -1px 1px 0px,\n\t\t\twhite -1px -1px 0px,\n\t\t\twhite 1px 0px 0px,\n\t\t\twhite 0px -1px 0px,\n\t\t\twhite -1px 0px 0px,\n\t\t\twhite 0px 1px 0px;\n\t}\n\t.front {\n\t\tposition: relative;\n\t\tz-index: 2;\n\t\tmargin-bottom: 5px !important;\n\t}\n\t.chart-full {\n\t\theight: 500px;\n\t\tmax-height: 80vh;\n\t}\n\t.table-inset {\n\t\twidth: calc(100%);\n\t\tclear: both;\n\t\tborder-collapse: collapse;\n\t\tborder-spacing: 0;\n    font-size: 14px;\n\t\tmargin-top: 8px;\n\t}\n\t.table-inset td, th {\n\t\t-webkit-box-sizing: border-box;\n\t\t        box-sizing: border-box;\n\t\tpadding: 0;\n\t}\n\t.table-inset .number {\n\t\ttext-align: right;\n\t}\n\t.no-hover {\n\t\tpointer-events: none;\n\t}\n</style>",
    "<script>\n\timport { getContext } from 'svelte';\n\n\tconst { data, width, height, xScale, yScale, yRange } = getContext('LayerCake');\n\n\texport let gridlines = true;\n\texport let formatTick = d => d;\n\texport let baseline = false;\n\texport let flipped = false;\n\texport let snapTicks = false;\n\texport let ticks = undefined;\n\texport let prefix = '';\n\texport let suffix = '';\n\texport let xTick = undefined;\n\texport let yTick = 15;\n\texport let dxTick = 0;\n\texport let dyTick = 0;\n\texport let lineColor = '#aaa';\n\texport let textColor = '#666';\n\texport let solid = false;\n\n\t$: isBandwidth = typeof $xScale.bandwidth === 'function';\n\n\t$: tickVals = Array.isArray(ticks) ? ticks :\n\t\tisBandwidth ?\n\t\t\t$xScale.domain() :\n\t\t\t$xScale.ticks(ticks);\n\n\tfunction textAnchor(i) {\n\t\tif (snapTicks === true) {\n\t\t\tif (i === 0) {\n\t\t\t\treturn 'start';\n\t\t\t}\n\t\t\tif (i === tickVals.length - 1) {\n\t\t\t\treturn 'end';\n\t\t\t}\n\t\t}\n\t\treturn 'middle';\n\t}\n</script>\n\n<g class='axis x-axis'>\n\t{#each tickVals as tick, i}\n\t\t<g class='tick tick-{ tick }' transform='translate({$xScale(tick)},{$yRange[0]})'>\n\t\t\t{#if gridlines !== false}\n\t\t\t\t<line y1='{($height * -1)}' y2='{dyTick}' x1='0' x2='0' stroke='{lineColor}' class:baseline={solid}></line>\n\t\t\t{/if}\n\t\t\t<text\n\t\t\t\tx=\"{xTick || isBandwidth ? $xScale.bandwidth() / 2 : 0 }\"\n\t\t\t\ty='{flipped ? ($height * -1) - 6 : yTick}'\n\t\t\t\tdx=\"{textAnchor(i) == 'start' ? dxTick - 2 : textAnchor(i) == 'end' ? dxTick + 2 : dxTick}\"\n\t\t\t\tdy='{dyTick}'\n\t\t\t\ttext-anchor='{textAnchor(i)}'\n\t\t\t\tfill='{textColor}'>\n\t\t\t\t{#if i == tickVals.length - 1}\n\t\t\t\t{prefix}{formatTick(tick)}{suffix}\n\t\t\t\t{:else}\n\t\t\t\t{formatTick(tick)}\n\t\t\t\t{/if}\n\t\t\t</text>\n\t\t</g>\n\t{/each}\n\t{#if baseline === true}\n\t\t<line class=\"baseline\" y1='{$height}' y2='0' x1='0' x2='0' stroke='{lineColor}'></line>\n\t{/if}\n</g>\n\n<style>\n\t.tick {\n\t\tfont-size: 14px;\n\t\tfont-weight: 200;\n\t}\n\n\tline,\n\t.tick line {\n\t\tstroke-dasharray: 2;\n\t}\n\n\t.baseline {\n\t\tstroke-dasharray: 0 !important;\n\t}\n</style>",
    "<script>\n\timport { getContext } from 'svelte';\n\n\tconst { padding, xRange, xScale, yScale } = getContext('LayerCake');\n\n\texport let ticks = 4;\n\texport let prefix = '';\n\texport let suffix = '';\n\texport let gridlines = true;\n\texport let formatTick = d => d;\n\texport let xTick = 0;\n\texport let yTick = 0;\n\texport let dxTick = 0;\n\texport let dyTick = -4;\n\texport let textAnchor = 'start';\n\texport let lineColor = '#aaa';\n\texport let textColor = '#666';\n\texport let solid = false;\n\n\t$: isBandwidth = typeof $yScale.bandwidth === 'function';\n\n\t$: tickVals = Array.isArray(ticks) ? ticks :\n\t\tisBandwidth ?\n\t\t\t$yScale.domain() :\n\t\t\t$yScale.ticks(ticks);\n</script>\n\n<g class='axis y-axis' transform='translate({-$padding.left}, 0)'>\n\t{#each tickVals as tick, i}\n\t\t<g class='tick tick-{tick}' transform='translate({$xRange[0] + (isBandwidth ? $padding.left : 0)}, {$yScale(tick)})'>\n\t\t\t{#if gridlines !== false}\n\t\t\t\t<line\n\t\t\t\t\tx2='100%'\n\t\t\t\t\ty1='{yTick + (isBandwidth ? ($yScale.bandwidth() / 2) : 0)}'\n\t\t\t\t\ty2='{yTick + (isBandwidth ? ($yScale.bandwidth() / 2) : 0)}'\n\t\t\t\t\tstroke='{lineColor}'\n\t\t\t\t\tclass:baseline={solid}\n\t\t\t\t></line>\n\t\t\t{/if}\n\t\t\t<text\n\t\t\t\tx='{xTick}'\n\t\t\t\ty='{yTick + (isBandwidth ? $yScale.bandwidth() / 2 : 0)}'\n\t\t\t\tdx='{isBandwidth ? 3 : dxTick}'\n\t\t\t\tdy='{isBandwidth ? 4 : dyTick}'\n\t\t\t\tfill='{textColor}'\n\t\t\t\tstyle=\"text-anchor:{isBandwidth ? 'end' : textAnchor};\"\n\t\t\t>\n\t\t\t\t{#if i == tickVals.length - 1}\n\t\t\t\t{prefix}{formatTick(tick)}{suffix}\n\t\t\t\t{:else}\n\t\t\t\t{formatTick(tick)}\n\t\t\t\t{/if}\n\t\t\t</text>\n\t\t</g>\n\t{/each}\n</g>\n\n<style>\n\t.tick {\n\t\tfont-size: 14px;\n\t\tfont-weight: 200;\n\t}\n\n\t.tick line {\n\t\tstroke-dasharray: 2;\n\t}\n\n\t.tick.tick-0 line {\n\t\tstroke-dasharray: 0;\n\t}\n\t\n\t.baseline {\n\t\tstroke-dasharray: 0 !important;\n\t}\n</style>",
    "<script>\n\timport { LayerCake, Svg, Html } from 'layercake';\n\timport { scaleOrdinal } from 'd3-scale';\n\timport { createEventDispatcher } from 'svelte';\n\n\tconst dispatch = createEventDispatcher();\n\n\timport Beeswarm from './Beeswarm.svelte';\n\timport AxisX from './AxisX.svelte';\n\timport AxisY from './AxisY.svelte';\n\timport Voronoi from './Voronoi.svelte';\n\timport Label from './Label.svelte';\n\n\texport let data;\n\texport let radius = 4;\n\texport let padding = 1;\n\texport let xKey = 'income';\n\texport let yKey = null;\n\texport let zKey = null;\n\texport let codeKey = 'lad19cd';\n\texport let nameKey = 'lad19nm';\n\texport let selected = null;\n\texport let hovered = null;\n\texport let highlighted = null;\n\texport let margins = { top: 0, bottom: 70, left: 3, right: 3 };\n\texport let click = true;\n\texport let animation = true;\n\texport let colors = ['#0571b0', '#85a0c2', '#d3d3d3', '#dc8175', '#ca0020'];\n\n\tconst stroke = 'orange';\n\tconst strokeWidth = 2;\n\tconst formatTick = d => (d * 100) + '%';\n\n\tfunction selectArea() {\n\t\tif (selectedInt != selected) {\n\t\t\tselected = selectedInt;\n\t\t\tdispatch('select', {\n\t\t\t\tcode: selected\n\t\t\t});\n\t\t}\n\t}\n\n\tlet selectedInt = selected;\n\n\t$: zDomain = zKey && Number.isInteger(data[0][zKey]) ? data.map(d => d[zKey]).filter((item, i, ar) => ar.indexOf(item) === i).sort((a, b) => a - b) : zKey ? data.map(d => d[zKey]).filter((item, i, ar) => ar.indexOf(item) === i).sort((a, b) => (a ? a : '').localeCompare(b ? b : '')) : null;\n\n\t$: click && selectedInt && selectArea();\n\t\n</script>\n\n<style>\n\t.chart-container {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tmin-height: 300px;\n\t\tmin-width: 200px;\n\t}\n</style>\n\n<div class=\"chart-container\">\n\t<LayerCake\n\t\tpadding={margins}\n\t\tx={xKey}\n\t\ty={yKey}\n\t\tz={zKey}\n\t\tzScale={scaleOrdinal()}\n\t\tzRange={colors}\n\t\tzDomain={zDomain}\n\t\tdata={data}\n\t>\n\t\t<Svg>\n\t\t\t<AxisX\n\t\t\t\tticks={5}\n\t\t\t\t{formatTick}\n\t\t\t/>\n\t\t\t{#if yKey}\n\t\t\t<AxisY/>\n\t\t\t{/if}\n\t\t\t<Beeswarm\n\t\t\t\t{radius}\n\t\t\t\t{padding}\n\t\t\t\t{codeKey}\n\t\t\t\t{selected}\n\t\t\t\t{hovered}\n\t\t\t\t{highlighted}\n\t\t\t\t{animation} />\n\t\t</Svg>\n\t\t<Html>\n\t\t\t<Label\n\t\t\t\t{selected}\n\t\t\t\t{hovered}\n\t\t\t\t{highlighted}\n\t\t\t\t{codeKey}\n\t\t\t\t{nameKey} />\n\t\t</Html>\n\t\t<Svg>\n\t\t\t<Voronoi {codeKey} bind:hovered bind:selected={selectedInt} {click}/>\n\t\t</Svg>\n\t</LayerCake>\n</div>\n",
    "<script>\n\tconst functions = [\n\t\t{\n\t\t\tname: 'Uniformly distributed',\n\t\t\tfunc: (val) => dim % 2 == 0 && Math.floor(val / dim) % 2 == 1 ? (val + 1) % 2 : val % 2\n\t\t},\n\t\t{\n\t\t\tname: 'Fully separated',\n\t\t\tfunc: (val) => val < (dim * dim) / 2 ? 1 : 0\n\t\t},\n\t\t{\n\t\t\tname: 'Randomly distributed',\n\t\t\tfunc: (val) => Math.floor(Math.random() * 2)\n\t\t}\n\t];\n\t\n\texport let dim = 4;\n\texport let dist = 0;\n\t\n\tlet func = functions[dist].func;\n\t\n\tlet cells = [];\n\t\n\t$: if (dim) {\n\t\tlet newcells = [];\n\t\tfor (let i = 0; i < dim; i++) {\n\t\t\tlet row = [];\n\t\t\tfor (let j = 0; j < dim; j++) {\n\t\t\t\trow.push((i * dim) + j);\n\t\t\t}\n\t\t\tnewcells.push(row);\n\t\t}\n\t\tcells = newcells;\n\t}\n\t\n</script>\n\n<style>\n\t.row:after {\n  \tclear: both;\n  \tcontent: \"\";\n  \tdisplay: table;\n\t}\n\t.cell {\n\t\tcolor: white;\n\t\tborder: 1px solid #999;\n  \tfloat: left;\n  \tfont-size: 24px;\n  \tfont-weight: bold;\n  \tline-height: 34px;\n  \theight: 34px;\n  \tmargin-right: -1px;\n  \tmargin-top: -1px;\n  \tpadding: 0;\n  \ttext-align: center;\n  \twidth: 34px;\n\t}\n\t.black {\n\t\tcolor: black;\n\t\tbackground-color: black;\n\t}\n</style>\n\n<div>\n\t{#each cells as row, i}\n\t<div class=\"row\">\n\t\t{#each cells[i] as col}\n\t\t<div class=\"cell\" class:black={func(col)}/>\n\t\t{/each}\n\t</div>\n\t{/each}\n</div>",
    "<script>\n\timport { LayerCake, Svg } from 'layercake';\n\timport { scaleBand, scaleOrdinal } from 'd3-scale';\n\n\timport Column from './Column.svelte';\n\timport AxisX from './AxisX.svelte';\n\timport AxisY from './AxisY.svelte';\n\timport Quintile from './Quintile.svelte';\n\n\texport let data;\n  export let colors;\n\n\texport let xKey = 'label';\n\texport let yKey = 'value';\n  export let zKey = 'label';\n\texport let yDomain = [0, null];\n\texport let quintiles = null;\n</script>\n\n<style>\n\t.chart-container {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tmin-width: 50px;\n\t}\n</style>\n\n<div class=\"chart-container\">\n\t<LayerCake\n\t\tpadding={{ top: 40, right: 0, bottom: 20, left: 25 }}\n\t\tx={xKey}\n\t\ty={yKey}\n    z={zKey}\n\t\txScale={scaleBand().paddingInner([0.02]).round(true)}\n\t\txDomain={data.map(d => d[xKey])}\n\t\tyDomain={yDomain}\n\t\tzScale={scaleOrdinal()}\n\t\tzDomain={data.map(d => d[zKey])}\n\t\tzRange={colors ? colors : null}\n\t\tdata={data}\n\t>\n\t\t<Svg>\n\t\t\t<Column\n        colors={true}\n      />\n\t\t\t<AxisY\n\t\t\t\tgridlines={true}\n\t\t\t\tsuffix=\"%\"\n\t\t\t/>\n\t\t\t{#if Array.isArray(quintiles)}\n\t\t\t<Quintile\n\t\t\t\t{quintiles}\n\t\t\t/>\n\t\t\t{/if}\n\t\t</Svg>\n\t</LayerCake>\n</div>",
    "<script>\n  import { getContext } from 'svelte';\n\n  const { data, xGet, yGet, yScale, zScale, config } = getContext('LayerCake');\n\n  $: midHeight = $yScale.bandwidth() / 2;\n</script>\n\n{#each $data as row}\n{#each $xGet(row) as circleX, i}\n<div\n  class=\"label {i == 2 ? 'below' : 'above'}\"\n  style=\"top:{$yGet(row) + midHeight}px; left:{circleX}px;\"\n>{i == 0 ? 'least deprived' : i == 1 ? 'most deprived' : 'average'}</div>\n{/each}\n{/each}\n\n<style>\n.label {\n  position: absolute;\n  font-size: 13px;\n  line-height: 1.2;\n  max-width: 60px;\n}\n.above {\n  transform: translate(0, -100%)translateY(-8px)translateX(-4px);\n}\n.below {\n  transform: translate(0, 0)translateY(6px)translateX(-4px);\n}\n</style>",
    "<script>\n\timport { getContext } from 'svelte';\n\timport { scaleOrdinal } from 'd3-scale';\n\n\tconst { data, xGet, yGet, yScale, zScale, config } = getContext('LayerCake');\n\n\texport let r = 5;\n\n\t$: midHeight = $yScale.bandwidth() / 2;\n</script>\n\n<g class=\"dot-plot\">\n\t{#each $data as row}\n\t\t<g class=\"dot-row\">\n\t\t\t<line\n\t\t\t\tx1=\"{Math.min(...$xGet(row))}\"\n\t\t\t\ty1=\"{$yGet(row) + midHeight}\"\n\t\t\t\tx2=\"{Math.max(...$xGet(row))}\"\n\t\t\t\ty2=\"{$yGet(row) + midHeight}\"\n\t\t\t\tstroke=\"{$zScale($config.x[2])}\"\n\t\t\t\tstroke-width=\"{2 * r}\"\n\t\t\t\topacity=\"0.4\"\n\t\t\t></line>\n\n\t\t\t{#each $xGet(row) as circleX, i}\n\t\t\t\t<circle\n\t\t\t\t\tcx=\"{circleX}\"\n\t\t\t\t\tcy=\"{$yGet(row) + midHeight}\"\n\t\t\t\t\tr=\"{r}\"\n\t\t\t\t\tfill=\"{$zScale($config.x[i])}\"\n\t\t\t\t></circle>\n\t\t\t{/each}\n\t\t</g>\n\t{/each}\n</g>\n\n<style>\n\tcircle {\n\t\tstroke: none;\n\t}\n</style>\n",
    "<script>\n\timport { LayerCake, Svg, Html } from 'layercake';\n\timport { scaleBand, scaleOrdinal } from 'd3-scale';\n\n\timport DotPlot from './DotPlot.svelte';\n\timport DotLabels from './DotLabels.svelte';\n\timport AxisX from './AxisX.svelte';\n\timport AxisY from './AxisY.svelte';\n\n\texport let data;\n\texport let height = 400;\n\texport let labels = false;\n\n\tconst yKey = 'label';\n\tconst xKey = Object.keys(data[0]).filter(d => d !== yKey);\n\n\tconst seriesColors = ['#2166ac','#b2182b','grey'];\n\n  data.forEach(d => {\n\t\txKey.forEach(name => {\n\t\t\td[name] = +d[name];\n\t\t});\n\t});\n</script>\n\n<style>\n\t.chart-container {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n</style>\n\n<div class=\"chart-container\" style=\"height: {height}px\">\n\t<LayerCake\n\t\tpadding={{ right: 0, bottom: 20, left: 150 }}\n\t\tx={xKey}\n\t\ty={yKey}\n\t\tyScale={scaleBand().paddingInner([0.05]).round(true)}\n\t\tyDomain={data.map(d => d[yKey])}\n\t\txDomain={[0, 0.65]}\n\t\txPadding={[10, 0]}\n\t\tzScale={scaleOrdinal()}\n\t\tzDomain={xKey}\n\t\tzRange={seriesColors}\n\t\tdata={data}\n\t>\n\t\t<Svg>\n\t\t\t<AxisX\n        ticks={[0, 0.2, 0.4, 0.6]}\n        formatTick={d => (100 * d).toFixed(0)}\n\t\t\t\tsuffix=\"%\"\n      />\n\t\t\t<AxisY\n\t\t\t\tgridlines={false}\n\t\t\t/>\n\t\t\t<DotPlot/>\n\t\t</Svg>\n\t\t{#if labels}\n\t\t<Html>\n\t\t\t<DotLabels/>\n\t\t</Html>\n\t\t{/if}\n\t</LayerCake>\n</div>",
    "<script>\n  import { getContext } from 'svelte';\n\n  const { data, xGet, yGet, yScale, zScale, config } = getContext('LayerCake');\n\n  export let selected = null;\n  export let hovered = null;\n  export let highlighted = null;\n\texport let codeKey = null;\n  export let nameKey = null;\n</script>\n\n{#if Array.isArray(highlighted)}\n  {#each $data.filter(d => highlighted.includes(d[codeKey])) as d}\n    <div class=\"label\" style=\"top:{d.y}px; left:{d.x}px;\">{d[nameKey]}</div>\n\t{/each}\n{/if}\n{#if selected}\n  {#each [ $data.find(d => d[codeKey] == selected) ] as d}\n    <div class=\"label\" style=\"top:{d.y}px; left:{d.x}px;\">{d[nameKey]}</div>\n  {/each}\n{/if}\n{#if hovered}\n  {#each [ $data.find(d => d[codeKey] == hovered) ] as d}\n    <div class=\"label\" style=\"top:{d.y}px; left:{d.x}px;\">{d[nameKey]}</div>\n\t{/each}\n{/if}\n\n<style>\n.label {\n  transform: translate(0, -100%)translateY(-8px)translateX(0px);\n  padding: 0 2px;\n  position: absolute;\n  font-size: 14px;\n  line-height: 1.2;\n  max-width: 130px;\n  background-color: #ffffffdd;\n}\n</style>",
    "<script>\n\texport let count = 100;\n\texport let rank = 20;\n\texport let width = 4;\n\texport let height = 20;\n\t\n\t$: offset = 1 - ((rank - 1) / (count - 1));\n</script>\n\n<style>\n\t.container {\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\theight: 10px;\n\t\tbackground-color: rgba(128,128,128,0.2);\n\t}\n\t.marker {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\theight: 100%;\n\t\tbackground-color: black;\n\t}\n</style>\n\n<div class=\"container\" style=\"height: {height}px\">\n\t<div class=\"marker\" style=\"width: {width}px; left: calc({offset} * (100% - {width}px))\"/>\n</div>",
    "<script>\n\texport let data;\n\texport let sort = null;\n\texport let asc = null;\n\texport let height = 200;\n\texport let rank = false;\n\texport let filter = null;\n\texport let filterCol = null;\n\texport let selected = null;\n\texport let selectedCol = null;\n\texport let collapse = [];\n\n\t$: regex = filter && filterCol ? new RegExp(filter, 'i') : null;\n\t$: filtered = regex ? data.filter(d => regex.test(d[filterCol])).map(d => d[filterCol]) : data.map(d => d[filterCol]);\n\t\n\tlet headers = Object.keys(data[0]);\n\tlet types = headers.map(h => !isNaN(data[0][h]));\n\t\n\tlet scrollbox;\n\tlet rankWidth;\n\tlet headerHeight = 0;\n\tlet colWidths = [];\n\t\n\tfunction sortBy(header) {\n\t\tif (sort == header) {\n\t\t\tasc = !asc;\n\t\t} else if (types[headers.indexOf(header)]) {\n\t\t\tsort = header;\n\t\t\tasc = false;\n\t\t} else {\n\t\t\tsort = header;\n\t\t\tasc = true;\n\t\t}\n\t}\n\t\n\t$: padding = data && scrollbox ? scrollbox.offsetWidth - scrollbox.clientWidth : 0;\n\t$: sorted = data.sort((a, b) => {\n\t\tif (!types[headers.indexOf(sort)]) {\n\t\t\treturn asc ? (a[sort] ? a[sort] : '').localeCompare(b[sort] ? b[sort] : '') : (b[sort] ? b[sort] : '').localeCompare(a[sort] ? a[sort] : '');\n\t\t} else {\n\t\t\treturn asc ? a[sort] - b[sort] : b[sort] - a[sort];\n\t\t}\n\t});\n</script>\n\n<style>\n\t@import url('https://fonts.googleapis.com/css2?family=B612+Mono&display=swap');\n\ttable {\n\t\tclear: both;\n\t\tborder-collapse: collapse;\n\t\tborder-spacing: 0;\n    font-size: 16px;\n\t}\n\ttd, th {\n\t\tbox-sizing: border-box;\n\t\tpadding: 2px 8px;\n\t}\n\t.header th {\n\t\tpadding-bottom: 5px;\n\t}\n\ttbody tr + tr {\n\t\tborder-top: 1px solid lightgrey;\n\t}\n\ttbody tr:hover {\n\t\tbackground: #f6f6f6;\n\t}\n\ttbody tr:hover td.active {\n\t\tbackground-color: #e0e0e0;\n\t}\n\tth {\n\t\ttext-transform: uppercase;\n\t\ttext-align: left;\n\t\tfont-size: 0.85rem;\n\t\tvertical-align: bottom;\n\t\tborder-bottom: 2px solid black;\n\t\tcursor: pointer;\n\t}\n\t.scroll-box {\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t\toverflow-y: auto;\n\t\toverflow-x: hidden;\n\t}\n\t.number {\n\t\ttext-align: right;\n\t\tmin-width: 80px;\n\t}\n\t.right {\n\t\ttext-align: right;\n\t}\n\t.hidden {\n\t\theight: 0;\n    line-height: 0;\n\t\tcolor: rgba(255,255,255,0);\n\t\toverflow: hidden;\n\t\tpointer-events: none;\n\t}\n\t.hidden th {\n\t\tpadding: 0 !important;\n\t\tborder-bottom: none !important;\n\t}\n\t.selected {\n\t\tbackground-color: rgba(255, 192, 0, 0.65) !important;\n\t}\n\t.selected .active {\n\t\tbackground-color: rgba(255, 192, 0, 0.8) !important;\n\t}\n\t.active {\n\t\tbackground-color: #f6f6f6;\n\t}\n\t.invisible {\n\t\tdisplay: none;\n\t}\n\t@media (max-width: 991px) {\n\t\t.collapse {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n\t@media (max-width: 700px) {\n\t\ttable {\n\t\t\tfont-size: 14px;\n\t\t}\n\t\tth {\n\t\t\tfont-size: 0.75rem;\n\t\t}\n\t\t.number {\n\t\t\tmin-width: 60px;\n\t\t}\n\t\ttd, th {\n\t\t\tbox-sizing: border-box;\n\t\t\tpadding: 2px 4px;\n\t\t}\n\t}\n</style>\n\n<div class=\"container\">\n<table class=\"header\" style=\"{padding > 0 ? 'min-width: calc(100% - ' + padding + 'px)' : ''}\" bind:clientHeight={headerHeight}>\n\t<thead>\n\t\t<tr>\n\t\t\t{#if rank}\n\t\t\t<th class=\"right\" style=\"{rankWidth ? 'width: ' + rankWidth + 'px' : ''}\">#</th>\n\t\t\t{/if}\n\t\t\t{#each headers as h, i}\n\t\t\t\t<th on:click=\"{() => sortBy(h)}\" style=\"{colWidths[i] ? 'width: ' + colWidths[i] + 'px' : ''}\" class:number={types[i]} class:collapse={collapse.includes(h)}>{h}</th>\n\t\t\t{/each}\n\t\t</tr>\n\t</thead>\n</table>\n\n<div class=\"scroll-box\" bind:this={scrollbox} style=\"height: {height - headerHeight}px\">\n\t<table class=\"body\">\n\t\t<thead>\n\t\t\t<tr class=\"hidden\">\n\t\t\t\t{#if rank}\n\t\t\t\t\t<th class=\"right\" bind:clientWidth={rankWidth}>#</th>\n\t\t\t\t{/if}\n\t\t\t\t{#each headers as h, i}\n\t\t\t\t\t<th bind:clientWidth={colWidths[i]} class:number={types[i]} class:collapse={collapse.includes(h)}>{h}</th>\n\t\t\t\t{/each}\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t{#each sorted as d, i}\n\t\t\t\t<tr class:invisible={filterCol && !filtered.includes(d[filterCol])} class:selected={selected && selectedCol && d[selectedCol] == selected}>\n\t\t\t\t\t{#if rank}\n\t\t\t\t\t\t<td class=\"right\">{i + 1}</td>\n\t\t\t\t\t{/if}\n\t\t\t\t\t{#each headers as h, j}\n\t\t\t\t\t\t<td class:number={types[j]} class:active={sort == h} class:collapse={collapse.includes(h)}>{d[h] != null ? d[h].toLocaleString() : ''}</td>\n\t\t\t\t\t{/each}\n\t\t\t\t</tr>\n\t\t\t{/each}\n\t\t</tbody>\n\t</table>\n</div>\n</div>",
    "<script>\n\timport { Delaunay } from 'd3-delaunay';\n\timport { getContext } from 'svelte';\n\n\tconst { data, width, height, x, y, z, yDomain } = getContext('LayerCake');\n\n\tfunction log (point) {\n\t\tconsole.log(point, point.data);\n\t}\n\n  export let codeKey = null;\n  export let hovered = null;\n\texport let selected = null;\n\texport let click = true;\n\n\t$: points = $data.map(d => {\n\t\tconst point = [d.x, d.y];\n\t\treturn point;\n\t});\n\n\t$: voronoi = $width > 0 && $height > 0 ? Delaunay.from(points).voronoi([0, 0, $width, $height]) : null;\n\n</script>\n\n<style>\n\t.voronoi-cell {\n\t\tfill: none;\n\t\tstroke: none;\n\t\tpointer-events: all;\n\t}\n</style>\n\n{#if voronoi}\n<g class=\"voronoi-group\" on:mouseleave=\"{() => { if (codeKey) { hovered = null } }}\">\n{#each $data as d, i}\n\t<path class=\"voronoi-cell\" d={voronoi.renderCell(i)}\n\t\ton:mouseover=\"{() => { if (codeKey) { hovered = d[codeKey] } }}\"\n\t\ton:click=\"{() => { if (codeKey && click) { selected = d[codeKey] } }}\"></path>\n{/each}\n</g>\n{/if}",
    "<script>\n\timport { themes } from '../config.js';\n\timport { getContext } from 'svelte';\n\n  export let theme = getContext('theme');\n  export let hr = true;\n</script>\n\n<section style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t<div class=\"col-medium\">\n    {#if hr}\n    <hr style=\"color: {themes[theme]['muted']}\"/>\n    {:else}\n    <hr style=\"color: {themes[theme]['muted']}; border: none;\"/>\n    {/if}\n\t</div>\n</section>\n\n<style>\n  hr {\n    width: 75px;\n    border: none;\n    border-top: 2px solid;\n    margin: 40px auto -10px auto;\n  }\n</style>\n\n",
    "<script>\n\timport { themes } from '../config.js';\n\timport { getContext } from 'svelte';\n\n\texport let theme = getContext('theme');\n\texport let center = true;\n\texport let wide = false;\n\texport let short = false;\n</script>\n\n<style>\n\tsection {\n\t\tpadding: 36px 0;\n\t}\n\t.short {\n\t\tmin-height: 70vh;\n\t}\n</style>\n\n<section style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t<div class=\"middle\" class:center class:col-medium={!wide} class:col-wide={wide} class:height-full={!short} class:short>\n\t\t<slot></slot>\n\t</div>\n</section>",
    "<script>\n  import { themes } from '../config.js';\n\timport { getContext } from 'svelte';\n\n\texport let theme = getContext('theme');\n  export let bgimage = null;\n  export let bgfixed = false;\n  export let center = true;\n  export let short = false;\n\n  let style = '';\n\n  if (bgimage) {\n    style += `background-image: url(${bgimage});`;\n  } else {\n    style += 'background-image: none;';\n  }\n\n  if (bgfixed) {\n    style += ' background-attachment: fixed;';\n  }\n</script>\n\n<style>\n  .short {\n    min-height: 85vh;\n  }\n  .v-padded {\n    box-sizing: border-box;\n    padding: 40px 0;\n  }\n</style>\n\n<header style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']}; {style}\" class:short>\n\t<div class=\"v-padded col-wide middle\" style=\"position: relative\" class:short>\n\t\t<div class:center>\n\t\t\t<slot></slot>\n    </div>\n\t</div>\n</header>",
    "<script>\n  import { themes } from '../config.js';\n\timport { onMount, getContext } from 'svelte';\n\timport { debounce } from 'debounce';\n\t\n\tconst colWidths = {\n\t\t'narrow': 200,\n\t\t'medium': 310,\n\t\t'wide': 500\n\t};\n\n  export let theme = getContext('theme');\n  export let col = 'medium';\n  export let grid = null;\n  export let caption = null;\n\texport let height = 200;\n\texport let gap = 12;\n\n\tlet rowHeight = !Number.isNaN(height) ? height + 'px' : height;\n\t\n\tconst minWidth = grid && colWidths[grid] ? colWidths[grid] : null;\n\t\n\tlet gridWidth;\n\tlet cols;\n\t\n\tlet el;\n\tlet divs;\n\tlet count;\n\t\n\tonMount(() => {\n\t\tresize();\n\t});\n\t\n\tconst update = debounce(resize, 200);\n\t\n\tfunction resize() {\n\t\tif (el && !divs) {\n\t\t\tlet arr = [];\n\t\t\tlet children = el.childNodes;\n\t\t\tchildren.forEach(child => {\n\t\t\t\tif (child.nodeName == 'DIV') { arr.push(child)};\n\t\t\t});\n\t\t\tdivs = arr;\n\t\t};\n\t\tcount = divs.length;\n\t\tcols = !minWidth || gridWidth <= minWidth ? 1 : Math.floor(gridWidth / minWidth);\n\t\tmakeCols();\n\t}\n\t\n\tfunction makeCols() {\n\t\tlet r = Math.ceil(count / cols) > 1 ? `-ms-grid-rows: ${rowHeight} (${gap}px ${rowHeight})[${Math.ceil(count / cols) - 1}]; grid-template-rows: ${rowHeight} repeat(${Math.ceil(count / cols) - 1}, ${gap}px ${rowHeight});` : `-ms-grid-rows: ${rowHeight}; grid-template-rows: ${rowHeight};`;\n\t\tlet c = cols > 1 ? `-ms-grid-columns: 1fr (${gap}px 1fr)[${cols - 1}]; grid-template-columns: 1fr repeat(${cols - 1}, ${gap}px 1fr);` : '';\n\t\tel.style.cssText = r + c;\n\t\tdivs.forEach((div, i) => {\n\t\t\tlet col = (i % cols) * 2 + 1;\n\t\t\tlet row = Math.floor(i / cols) * 2 + 1;\n\t\t\tdiv.style.cssText = `-ms-grid-column: ${col}; -ms-grid-row: ${row}; grid-column: ${col}; grid-row: ${row};`;\n\t\t});\n\t}\n\t\n\t$: minWidth && gridWidth && update();\n</script>\n\n<figure style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t<div class=\"col-{col}\">\n\t\t<div bind:this={el} bind:clientWidth={gridWidth} class=\"grid\">\n\t\t\t<slot></slot>\n\t\t</div>\n  </div>\n</figure>\n{#if caption}\n<caption style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n  <div class=\"col-medium\">\n    <div class=\"caption\">{@html caption}</div>\n  </div>\n</caption>\n{/if}\n\n<style>\n\t.grid {\n\t\tdisplay: grid;\n\t\tdisplay: -ms-grid;\n\t\t-ms-grid-columns: 1fr;\n\t\tgrid-template-columns: 1fr;\n    margin-top: 40px;\n\t}\n</style>",
    "<script>\n\timport { themes } from '../config.js';\n\timport { getContext } from 'svelte';\n\n\texport let theme = getContext('theme');\n</script>\n\n<footer style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['pale']};\">\n\t<div class=\"col-wide\" data-analytics=\"footer\">\n\t\t<a href=\"https://www.ons.gov.uk/\">\n\t\t\t{#if theme == 'dark'}\n\t\t\t<img\n\t\t\t\tclass=\"logo-img\"\n\t\t\t\tsrc=\"./img/ons-logo-neg-en.svg\"\n\t\t\t\talt=\"Office for National Statistics\" />\n\t\t\t{:else}\n\t\t\t<img\n\t\t\t\tclass=\"logo-img\"\n\t\t\t\tsrc=\"./img/ons-logo-black-en.svg\"\n\t\t\t\talt=\"Office for National Statistics\" />\n\t\t\t{/if}\n\t\t</a>\n\t\t<ul>\n\t\t\t<li><a href=\"https://www.ons.gov.uk/aboutus/contactus\" class=\"link\" style=\"color: {themes[theme]['text']}\">Contact us</a></li>\n\t\t\t<li><a href=\"https://www.ons.gov.uk/help/privacynotice\" class=\"link\" style=\"color: {themes[theme]['text']}\">Cookies and privacy</a></li>\n\t\t</ul>\n\t\t<hr style=\"border-top-color: {themes[theme]['muted']}\" />\n\t\t<div class=\"license\">\n\t\t\t<svg class=\"ogl-img\" viewBox=\"0 0 59 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t<title>UK Open Government Licence</title>\n\t\t\t\t<path fill=\"{themes[theme]['muted']}\" d=\"M59,17.5v6.2H45.3V4l6.2-3.9v17.4H59z M33.6,13h9.8v10.7H43L40.6,21c-2.1,1.8-4.9,3-7.9,3 c-4.4,0-8.3-2.4-10.4-6.1c-2.1,3.6-5.9,6.1-10.4,6.1C5.4,23.9,0,18.6,0,12C0,5.4,5.4,0.1,11.9,0.1c4.5,0,8.4,2.5,10.4,6.1 c2.1-3.6,5.9-6.1,10.4-6.1c4.2,0,7.9,2.2,10.1,5.5l-5.2,3.3c-1-1.6-2.8-2.7-4.8-2.7C29.6,6.2,27,8.8,27,12s2.6,5.8,5.8,5.8 c1.5,0,2.8-0.5,3.8-1.4L33.6,13z M17.7,12c0-3.2-2.6-5.7-5.8-5.7S6.2,8.8,6.2,12s2.6,5.8,5.8,5.8S17.7,15.2,17.7,12z\"/>\n\t\t\t</svg>\n\t\t\tAll content is available under the\n\t\t\t<a\n\t\t\t\thref=\"https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/\"\n\t\t\t\tclass=\"link\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noopener\"\n\t\t\t\tstyle=\"color: {themes[theme]['text']}\">Open Government Licence v3.0</a>, \n\t\t\texcept where otherwise stated\n\t\t</div>\n\t</div>\n</footer>\n\n<style>\n\tfooter {\n\t\tpadding-bottom: 72px;\n\t\tpadding-top: 36px;\n\t\tfont-size: 18px;\n\t}\n\tfooter a.link {\n\t\t-webkit-box-sizing: border-box;\n\t\tbox-sizing: border-box;\n\t\ttext-decoration: underline;\n\t\tdisplay: inline-block;\n\t}\n\tfooter a.link:hover {\n\t\ttext-decoration: none;\n\t}\n\tfooter a.link:active {\n\t\toutline: 3px solid transparent;\n\t\tbackground-color: #fd0;\n\t\t-webkit-box-shadow: 0 -2px #fd0, 0 4px #222;\n\t\tbox-shadow: 0 -2px #fd0, 0 4px #222;\n\t\tcolor: #222;\n\t\ttext-decoration: none;\n\t}\n\tfooter hr {\n\t\tmargin-bottom: 27px;\n\t\tmargin-top: 36px;\n\t\tborder: none;\n\t\tborder-top: 1px solid #777;\n\t}\n\tul {\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t}\n\tli {\n\t\tmargin-right: 18px;\n\t\tdisplay: inline-block;\n\t}\n\t.logo-img {\n\t\tmargin-bottom: 27px;\n\t}\n\t.ogl-img {\n\t\tmargin: 0 0.5rem 0.2rem 0;\n\t\twidth: 59px;\n\t\theight: 24px;\n\t\tvertical-align: middle;\n\t}\n\t.license {\n\t\tvertical-align: top;\n\t}\n\ta img:hover {\n\t\tcursor: pointer;\n\t}\n</style>",
    "<script>\n  import { themes } from '../config.js';\n\timport { getContext } from 'svelte';\n\n\texport let theme = getContext('theme');\n\texport let filled = false;\n\texport let center = true;\n</script>\n\n<nav style=\"border-bottom-color: {themes[theme]['muted']}; {filled ? 'background-color: ' +  themes[theme]['background'] + ';' : ''}\">\n  <div class=\"col-wide middle\" class:center>\n\t\t<a href=\"https://www.ons.gov.uk/\">\n\t\t\t<picture>\n\t\t\t\t{#if theme == 'dark'}\n\t\t\t\t<img src=\"./img/ons-logo-neg-en.svg\" alt=\"Office for National Statistics\">\n\t\t\t\t{:else if filled == true}\n\t\t\t\t<img src=\"./img/ons-logo-pos-en.svg\" alt=\"Office for National Statistics\">\n\t\t\t\t{:else}\n\t\t\t\t<img src=\"./img/ons-logo-black-en.svg\" alt=\"Office for National Statistics\">\n\t\t\t\t{/if}\n\t\t\t</picture>\n\t\t</a>\n  </div>\n</nav>\n\n<style>\n\tnav {\n\t\t-webkit-box-sizing: border-box;\n\t\tbox-sizing: border-box;\n\t\tposition: relative;\n\t\theight: 46px;\n\t\tmargin-bottom: -46px;\n\t\tborder-bottom: 1px solid #777;\n\t\tz-index: 1;\n\t}\n\tpicture {\n\t\tposition: relative;\n\t\ttop: -3px;\n\t\tpadding: 0 5px;\n\t}\n\timg {\n\t\twidth: 270px;\n\t}\n\ta img:hover {\n\t\tcursor: pointer;\n\t}\n</style>",
    "<script context=\"module\">\r\n  // Based on svelte-scroller by Rich Harris\r\n  // https://github.com/sveltejs/svelte-scroller\r\n  // Patched to transpile to IE 11 and allow for split-screen view option\r\n\r\n\tconst handlers = [];\r\n\tlet manager;\r\n\r\n\tif (typeof window !== 'undefined') {\r\n\t\tconst run_all = () => handlers.forEach(fn => fn());\r\n\r\n\t\twindow.addEventListener('scroll', run_all);\r\n\t\twindow.addEventListener('resize', run_all);\r\n\t}\r\n\r\n\tif (typeof IntersectionObserver !== 'undefined') {\r\n\t\tconst map = new Map();\r\n\r\n\t\tconst observer = new IntersectionObserver((entries, observer) => {\r\n\t\t\tentries.forEach(entry => {\r\n\t\t\t\tconst update = map.get(entry.target);\r\n\t\t\t\tconst index = handlers.indexOf(update);\r\n\r\n\t\t\t\tif (entry.isIntersecting) {\r\n\t\t\t\t\tif (index === -1) handlers.push(update);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tupdate();\r\n\t\t\t\t\tif (index !== -1) handlers.splice(index, 1);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}, {\r\n\t\t\trootMargin: '400px 0px' // TODO why 400?\r\n\t\t});\r\n\r\n\t\tmanager = {\r\n\t\t\tadd: ({ outer, update }) => {\r\n\t\t\t\tconst { top, bottom } = outer.getBoundingClientRect();\r\n\r\n\t\t\t\tif (top < window.innerHeight && bottom > 0) handlers.push(update);\r\n\r\n\t\t\t\tmap.set(outer, update);\r\n\t\t\t\tobserver.observe(outer);\r\n\t\t\t},\r\n\r\n\t\t\tremove: ({ outer, update }) => {\r\n\t\t\t\tconst index = handlers.indexOf(update);\r\n\t\t\t\tif (index !== -1) handlers.splice(index, 1);\r\n\r\n\t\t\t\tmap.delete(outer);\r\n\t\t\t\tobserver.unobserve(outer);\r\n\t\t\t}\r\n\t\t};\r\n\t} else {\r\n\t\tmanager = {\r\n\t\t\tadd: ({ update }) => {\r\n\t\t\t\thandlers.push(update);\r\n\t\t\t},\r\n\r\n\t\t\tremove: ({ update }) => {\r\n\t\t\t\tconst index = handlers.indexOf(update);\r\n\t\t\t\tif (index !== -1) handlers.splice(index, 1);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n</script>\r\n\r\n<script>\r\n\timport { onMount } from 'svelte';\r\n\r\n\t// config\r\n\texport let top = 0;\r\n\texport let bottom = 1;\r\n\texport let threshold = 0.5;\r\n\texport let query = 'section';\r\n\texport let parallax = false;\r\n\r\n\t// bindings\r\n\texport let index = 0;\r\n\texport let count = 0;\r\n\texport let offset = 0;\r\n\texport let progress = 0;\r\n\texport let visible = false;\r\n\texport let splitscreen = false; // Add class to allow for split screen option\r\n\r\n\tlet outer;\r\n  let bgContainer; // IE patch. Container binding to update inline style\r\n\tlet foreground;\r\n\tlet background;\r\n\tlet left;\r\n\tlet sections;\r\n\tlet wh = 0;\r\n\tlet fixed;\r\n\tlet offset_top;\r\n\tlet width = 1;\r\n\tlet height;\r\n\tlet inverted;\r\n\r\n\t$: top_px = Math.round(top * wh);\r\n\t$: bottom_px = Math.round(bottom * wh);\r\n\t$: threshold_px = Math.round(threshold * wh);\r\n\r\n\t$: (top, bottom, threshold, parallax, update());\r\n\r\n\tonMount(() => {\r\n\t\tsections = foreground.querySelectorAll(query);\r\n\t\tcount = sections.length;\r\n\r\n\t\tupdate();\r\n\r\n\t\tconst scroller = { outer, update };\r\n\r\n\t\tmanager.add(scroller);\r\n\t\treturn () => manager.remove(scroller);\r\n\t});\r\n\r\n\t// IE patch. BG container style (fixed/unfixed) set via function\r\n  function setFixed() {\r\n    if (bgContainer) {\r\n      let style = `position: ${fixed ? 'fixed' : 'absolute'}; top: 0; transform: translate(0, ${offset_top}px); width: ${width}px; z-index: ${inverted ? 3 : 1};`;\r\n      bgContainer.style.cssText = style;\r\n    }\r\n  }\r\n\r\n\tfunction update() {\r\n\t\tif (!foreground) return;\r\n\r\n\t\t// re-measure outer container\r\n\t\tconst bcr = outer.getBoundingClientRect();\r\n\t\tleft = bcr.left;\r\n\t\twidth = bcr.right - bcr.left;\r\n\r\n\t\t// determine fix state\r\n\t\tconst fg = foreground.getBoundingClientRect();\r\n\t\tconst bg = background.getBoundingClientRect();\r\n\r\n\t\tvisible = fg.top < wh && fg.bottom > 0;\r\n\r\n\t\tconst foreground_height = fg.bottom - fg.top;\r\n\t\tconst background_height = bg.bottom - bg.top;\r\n\r\n\t\tconst available_space = bottom_px - top_px;\r\n\t\tprogress = (top_px - fg.top) / (foreground_height - available_space);\r\n\r\n\t\tif (progress <= 0) {\r\n\t\t\toffset_top = 0;\r\n      if (fixed) {\r\n        fixed = false;\r\n        setFixed();\r\n      } // Non-IE specific patch to avoid setting style repeatedly\r\n\t\t} else if (progress >= 1) {\r\n\t\t\toffset_top = parallax\r\n\t\t\t\t? (foreground_height - background_height)\r\n\t\t\t\t: (foreground_height - available_space);\r\n      if (fixed) {\r\n        fixed = false;\r\n        setFixed();\r\n      }\r\n\t\t} else {\r\n\t\t\toffset_top = parallax ?\r\n\t\t\t\tMath.round(top_px - progress * (background_height - available_space)) :\r\n\t\t\t\ttop_px;\r\n      if (!fixed) {\r\n        fixed = true;\r\n        setFixed();\r\n      }\r\n\t\t}\r\n\r\n\t\tfor (index = 0; index < sections.length; index += 1) {\r\n\t\t\tconst section = sections[index];\r\n\t\t\tconst { top } = section.getBoundingClientRect();\r\n\r\n\t\t\tconst next = sections[index + 1];\r\n\t\t\tconst bottom = next ? next.getBoundingClientRect().top : fg.bottom;\r\n\r\n\t\t\toffset = (threshold_px - top) / (bottom - top);\r\n\t\t\tif (bottom >= threshold_px) break;\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<svelte:window bind:innerHeight={wh}/>\r\n\r\n<svelte-scroller-outer bind:this={outer} class:splitscreen>\r\n\t<svelte-scroller-background-container class='background-container' bind:this={bgContainer}>\r\n\t\t<svelte-scroller-background bind:this={background}>\r\n\t\t\t<slot name=\"background\"></slot>\r\n\t\t</svelte-scroller-background>\r\n\t</svelte-scroller-background-container>\r\n\r\n\t<svelte-scroller-foreground bind:this={foreground}>\r\n\t\t<slot name=\"foreground\"></slot>\r\n\t</svelte-scroller-foreground>\r\n</svelte-scroller-outer>\r\n\r\n<style>\r\n\tsvelte-scroller-outer {\r\n\t\tdisplay: block;\r\n\t\tposition: relative;\r\n\t\tmax-width: 100%;\r\n\t}\r\n\r\n\tsvelte-scroller-background {\r\n\t\tdisplay: block;\r\n\t\tposition: relative;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\tsvelte-scroller-foreground {\r\n\t\tdisplay: block;\r\n\t\tposition: relative;\r\n\t\tz-index: 2;\r\n\t}\r\n\r\n\tsvelte-scroller-foreground::after {\r\n\t\tcontent: ' ';\r\n\t\tdisplay: block;\r\n\t\tclear: both;\r\n\t}\r\n\r\n\tsvelte-scroller-background-container {\r\n\t\tdisplay: block;\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 100%;\r\n\t\tpointer-events: none;\r\n\t\t/* height: 100%; */\r\n\r\n\t\t/* in theory this helps prevent jumping */\r\n\t\twill-change: transform;\r\n\t\t/* -webkit-transform: translate3d(0, 0, 0);\r\n\t\t-moz-transform: translate3d(0, 0, 0);\r\n\t\ttransform: translate3d(0, 0, 0); */\r\n\t}\r\n</style>",
    "<script>\n\timport { onMount, setContext } from 'svelte';\n\timport mapbox from 'mapbox-gl';\n\n\texport let map;\n\texport let id = \"map\";\n\texport let location = {\n\t\tbounds: [[-5.816, 49.864], [1.863, 55.872]] // England & Wales\n\t};\n\texport let style;\n\texport let minzoom = 0;\n\texport let maxzoom = 14;\n\t\n\texport let zoom = null;\n\t\n\tlet container;\n\tlet w;\n\tlet options;\n\t\n\tsetContext('map', {\n\t\tgetMap: () => map\n\t});\n\t\n\tif (location.bounds) {\n\t\toptions = { bounds: location.bounds };\n\t} else if (location.lon && location.lat) {\n\t\toptions = {\n\t\t\tcenter: [location.lon, location.lat]\n\t\t}\n\t\tif (location.zoom) {\n\t\t\toptions.zoom = location.zoom;\n\t\t}\n\t};\n\n\tonMount(() => {\n\t\tmap = new mapbox.Map({\n\t\t\tcontainer,\n\t\t\tstyle: style,\n\t\t\tminZoom: minzoom,\n\t\t\tmaxZoom: maxzoom,\n\t\t\tinteractive: false,\n\t\t\t...options\n\t\t});\n\t\t\t\n\t\t// Get initial zoom level\n\t\tmap.on('load', () => {\n\t\t\tzoom = map.getZoom();\n\t\t});\n\t\t\n\t\t// Update zoom level when the view zooms\n\t\tmap.on('zoom', () => {\n\t\t\t\tzoom = map.getZoom();\n\t\t});\n\n\t\treturn () => {\n\t\t\tmap.remove();\n\t\t};\n\t});\n\n\t// Function that forces map to resize to fit parent div, in case it doesn't automatically\n\tfunction resizeCanvas() {\n\t\tlet canvas = document.getElementsByClassName('mapboxgl-canvas');\n\t\tif (canvas[0]) {\n\t\t\tcanvas[0].style.width = \"100%\";\n\t\t\tmap.resize();\n\t\t}\n\t}\n\n\t// Invoke above function when parent div size changes\n\t$: w && resizeCanvas();\n</script>\n\n<style>\n\tdiv {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n</style>\n\n<div bind:clientWidth={w} bind:this={container} id=\"{id}\">\n\t{#if map}\n\t\t<slot></slot>\n\t{/if}\n</div>",
    "<script>\n  export let color = \"black\";\n  export let animation = true;\n\n  const colors = [\"black\", \"white\"];\n\n  color = colors.includes(color) ? color : \"black\";\n</script>\n\n<img src=\"./img/scroll-down-{color}.svg\" class=\"arrow\" class:bounce={animation} alt=\"\" aria-hidden=\"true\"/><slot></slot>\n\n<style>\n\t.arrow {\n\t\twidth: 48px;\n\t\theight: 48px;\n\t\tmargin-right: 10px;\n\t}\n\t.bounce {\n\t\t-webkit-animation-duration: 2s;\n\t\t        animation-duration: 2s;\n\t\t-webkit-animation-iteration-count: infinite;\n\t\t        animation-iteration-count: infinite;\n\t\t-webkit-animation-name: bounce;\n\t\t        animation-name: bounce;\n\t\t-webkit-animation-timing-function: ease;\n\t\t        animation-timing-function: ease;\n\t}\n\t@-webkit-keyframes bounce {\n\t\t0%   { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t\t30%  { -webkit-transform: translateY(-10px); transform: translateY(-10px); }\n\t\t50%  { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t\t100% { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t}\n\t@keyframes bounce {\n\t\t0%   { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t\t30%  { -webkit-transform: translateY(-10px); transform: translateY(-10px); }\n\t\t50%  { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t\t100% { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t}\n</style>",
    "<script>\n  import parse from 'parse-color';\n\n  export let color = 'lightgrey';\n\texport let nowrap = true;\n\n  function textColor(rgb) {\n\t\tconst brightness = ((rgb[0] * 299) + (rgb[1] * 587) + (rgb[2] * 114)) / 1000;\n\t\treturn (brightness > 125) ? 'black' : 'white';\n\t}\n\n  let text = 'black';\n\n\t$: rgb = parse(color).rgb;\n\t\n\t$: if (rgb) {\n\t\ttext = textColor(rgb);\n\t}\n\n</script>\n\n<span class=\"em\" class:nowrap style=\"background-color: {color}; color: {text};\" role=\"presentation\">\n  <slot></slot>\n</span>\n\n<style>\n\t.em {\n\t\tpadding: 1px 4px 1px 4px;\n\t\tfont-weight: bold;\n\t}\n\t.nowrap {\n\t\twhite-space: nowrap;\n\t}\n</style>",
    "<script>\n  export let id = \"switch\";\n  export let label = \"Label\";\n  export let mono = false;\n  export let checked;\n</script>\n\n<div class=\"switch\">\n  <input bind:checked {id} type=\"checkbox\" class=\"switch-input\" tabindex=\"0\" />\n  <label for={id} class=\"switch-label\" class:mono>{label}</label>\n</div>\n\n<style>\n  .switch {\n    position: relative;\n    display: inline-block;\n  }\n  .switch-input {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    margin: -1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    border: 0;\n  }\n  .switch-label::before,\n  .switch-label::after {\n    content: \"\";\n    display: block;\n    position: absolute;\n    cursor: pointer;\n  }\n  .switch-label {\n    display: block;\n    cursor: pointer;\n    margin-top: -4px;\n    margin-left: 58px;\n  }\n  .switch-label::before {\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n    top: 0;\n    left: 0;\n    width: 48px;\n    height: 24px;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    background-color: #aaa;\n    border-radius: 9999em;\n    -webkit-transition: background-color 0.25s ease;\n    -o-transition: background-color 0.25s ease;\n    transition: background-color 0.25s ease;\n  }\n  .switch-label::after {\n    top: 3px;\n    left: 3px;\n    width: 18px;\n    height: 18px;\n    border-radius: 50%;\n    background-color: #fff;\n    -webkit-transition: left 0.25s ease;\n    -o-transition: left 0.25s ease;\n    transition: left 0.25s ease;\n  }\n  .switch-input:checked + .switch-label::before {\n    background-color: rgb(32, 96, 149);\n  }\n  .switch-input:checked + .switch-label::after {\n    left: 27px;\n    top: 3px;\n  }\n\n  .mono::before {\n    border: 2px solid white;\n    background: none !important;\n  }\n</style>"
  ],
  "names": [],
  "mappings": "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"
}